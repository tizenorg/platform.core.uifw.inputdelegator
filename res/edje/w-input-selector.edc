#define FONT_NAME "GP45_ArabCJK_TouchWiz"

#define BTN_W 120
#define BTN_H 120
#define BTN_PAD_W 1
#define BTN_PAD_H 1

collections {
   base_scale: 1.3;
   group { name: "main";
	  parts {
		 part { name: "background";
			type: RECT;
			description {
			   state: "default" 0.0;
			   color: 0 0 0 255;
			}
		 }

		 part { name: "txt_title";
			type: TEXT;
			mouse_events: 0;
			description { state: "default" 0.0;
				  rel1 { relative: 0.0 0.0; to: background; }
				  rel2 { relative: 1.0 0.35; to: background; }
			   text { font: FONT_NAME; size: 35; }
			   color: 0 140 239 255;
			   fixed: 1 1;
			}
		 }

		 part { name: "btn1";
			type: SWALLOW;
			scale: 1;
			description { state: "default" 0.0;
				  rel1 { relative: 0.0 0.0; to: background; }
				  rel2 { relative: 1.0 1.0; to: background; }
			   min: BTN_W BTN_H;
			   max: BTN_W BTN_H;
			   align: 0 0.5;
			   fixed: 1 1;
			}
		 }

		 part { name: "padding";
			type: SPACER;
			scale: 1;
			mouse_events: 0;
			description { state: "default" 0.0;
			   rel1 {
				  to_x: "btn1";
				  relative: 1.0 0.0;
			   }
			   rel2 {
				  to_y: "btn1";
				  relative: 1.0 1.0;
			   }
			   align: 0.0 1.0;
			   min: BTN_PAD_W BTN_H;
			   max: BTN_PAD_W BTN_H;
			   fixed: 1 1;
			}
		 }

		 part { name: "btn2";
			type: SWALLOW;
			scale: 1;
			description { state: "default" 0.0;
			   rel1 {
				  to_x: "padding";
				  relative: 1.0 0.0;
			   }
			   rel2 {
				  to_y: "padding";
				  relative: 1.0 1.0;
			   }
			   align: 0.0 1.0;
			   min: (BTN_W - BTN_PAD_W) BTN_H;
			   max: (BTN_W - BTN_PAD_W) BTN_H;
			   fixed: 1 1;
			}
		 }
		 part { name: "padding2";
			type: SPACER;
			scale: 1;
			mouse_events: 0;
			description { state: "default" 0.0;
			   rel1 {
				  to_x: "btn2";
				  relative: 1.0 0.0;
			   }
			   rel2 {
				  to_y: "btn2";
				  relative: 1.0 1.0;
			   }
			   align: 0.0 1.0;
			   min: BTN_PAD_W BTN_H;
			   max: BTN_PAD_W BTN_H;
			   fixed: 1 1;
			}
		 }

		 part { name: "btn3";
			type: SWALLOW;
			scale: 1;
			description { state: "default" 0.0;
			   rel1 {
				  to_x: "padding2";
				  relative: 1.0 0.0;
			   }
			   rel2 {
				  to_y: "padding2";
				  relative: 1.0 1.0;
			   }
			   align: 0.0 1.0;
			   min: (BTN_W - BTN_PAD_W) BTN_H;
			   max: (BTN_W - BTN_PAD_W) BTN_H;
			   fixed: 1 1;
			}
		 }

		 part { name: "template_list";
			type: SWALLOW;
			scale: 1;
			description { state: "default" 0.0;
			   rel1 { relative: 0.0 0.0; to: background; }
			   rel2 { relative: 1.0 1.0; to: background; }
			   align: 0.0 0.0;
			}
		 }
	  }
   }

#define LIST_BUTTON_PADDING_LEFT_SIZE_INC 0
#define LIST_BUTTON_PADDING_RIGHT_SIZE_INC 0
#define LIST_BUTTON_PADDING_2BUTTON_TOP_SIZE_INC 1
#define LIST_BUTTON_PADDING_BOTTOM_SIZE_INC 1
#define BUTTON_2BUTTON_WIDTH_INC 180
#define BUTTON_2BUTTON_RIGHT_WIDTH_INC 179
#define LIST_BUTTON_PADDING_CENTER_SIZE_INC 1

#define PART(TYPE, NAME, DESCRIPION) \
	part { name: NAME; \
		scale: 1; \
		type: TYPE; \
		DESCRIPION \
	}

#define DESC_LTB( LEFT, TOP, BOTTOM, PARAM ) \
	   description { state: "default" 0.0; \
		  align: 0 0.5; \
		  rel1 { \
			 relative: 1 1; \
			 to_x: LEFT; \
			 to_y: TOP; \
		  } \
		  rel2 { \
			 relative: 1 0; \
			 to_x: LEFT; \
			 to_y: BOTTOM; \
		  } \
		  PARAM \
	   }

#define DESC_TB( TOP, BOTTOM, PARAM ) \
	   description { state: "default" 0.0; \
		  align: 0.5 0.5; \
		  rel1 { \
			 relative: 0 1; \
			 to_y: TOP; \
		  } \
		  rel2 { \
			 relative: 1 0; \
			 to_y: BOTTOM; \
		  } \
		  PARAM \
	   }

#define DESC_LRTB( LEFT, RIGHT, TOP, BOTTOM, PARAM ) \
	   description { state: "default" 0.0; \
		  rel1 { \
			 relative: 1 1; \
			 to_x: LEFT; \
			 to_y: TOP; \
		  } \
		  rel2 { \
			 relative: 0 0; \
			 to_x: RIGHT; \
			 to_y: BOTTOM; \
		  } \
		  PARAM \
	   }

#define DESC_FROM_L( PARAM ) \
	description { state: "default" 0.0; \
		fixed: 1 0; \
		align: 0.0 0.5; \
		rel2.relative: 0.0 1.0; \
		PARAM \
	}

#define DESC_FROM_R( PARAM ) \
	description { state: "default" 0.0; \
		fixed: 1 0; \
		align: 1.0 0.5; \
		rel1.relative: 1 0; \
		PARAM \
	}

#define DESC_FROM_T( PARAM ) \
	description { state: "default" 0.0; \
		fixed: 0 1; \
		align: 0.5 0.0; \
		rel2.relative: 1.0 0.0; \
		PARAM \
	}

#define DESC_FROM_B( PARAM ) \
	description { state: "default" 0.0; \
		fixed: 0 1; \
		rel1.relative: 0.0 1.0; \
		align: 0.5 1.0; \
		PARAM \
	}

#define DESC_L( LEFT, PARAM ) \
	description { state: "default" 0.0; \
		align: 0 0.5; \
		fixed: 1 0; \
		rel1 { \
			relative: 1 0; \
			to_x: LEFT; \
		} \
		rel2 { \
			relative: 1 1; \
			to_x: LEFT; \
		} \
		PARAM \
	}



#define PART_LIST_PADDINGS(LEFT_SIZE, RIGHT_SIZE, TOP_SIZE, BOTTOM_SIZE) \
	   PART(SWALLOW, "elm.swallow.pad", \
		  mouse_events: 0; \
		  DESC_FROM_L( ; ) \
	   ) \
	   PART(SWALLOW, "elm.swallow.colorbar", \
		  mouse_events: 0; \
		  DESC_L("elm.swallow.pad", ) \
	   ) \
	   PART(SPACER, "elm.padding.left", \
		  scale: 0; \
		  DESC_L("elm.swallow.pad", \
			 min: LEFT_SIZE 0; \
			 max: LEFT_SIZE -1; \
		  ) \
	   ) \
	   PART(SPACER, "elm.padding.right", \
		  scale: 0; \
		  DESC_FROM_R( \
			 min: RIGHT_SIZE 0; \
			 max: RIGHT_SIZE -1; \
		  ) \
	   ) \
	   PART(SPACER, "elm.padding.top", \
		  scale: 0; \
		  DESC_FROM_T( \
			 min: 0 TOP_SIZE; \
			 max: -1 TOP_SIZE; \
		  ) \
	   ) \
	   PART(SPACER, "elm.padding.bottom", \
		  scale: 0; \
		  DESC_FROM_B( \
			 min: 0 BOTTOM_SIZE; \
			 max: -1 BOTTOM_SIZE; \
		  ) \
	   )

#define PROGRAM_LIST_DEFAULT( TARGET ) \
	program { name: "default"; \
		signal: "elm,state,default"; \
		source: "elm"; \
		action: STATE_SET "default" 0.0; \
		TARGET \
	}

#define PROGRAM_LIST_DISABLE( TARGET ) \
	program { name: "enabled"; \
		signal: "elm,state,enabled"; \
		source: "elm"; \
		action: STATE_SET "default" 0.0; \
		TARGET \
	} \
	program { name: "disabled"; \
		signal: "elm,state,disabled"; \
		source: "elm"; \
		action: STATE_SET "disabled" 0.0; \
		TARGET \
	}

#define PROGRAM_LIST_SELECT( TARGET ) \
	program { name: "selected"; \
		signal: "elm,state,selected"; \
		source: "elm"; \
		action: STATE_SET "selected" 0.0; \
		TARGET \
	} \
	program { name: "unselected"; \
		signal: "elm,state,unselected"; \
		source: "elm"; \
		action: STATE_SET "default" 0.0; \
		TARGET \
	}

#define PROGRAM_LIST_HIGHLIGHT( TARGET ) \
	program { name: "highlighted"; \
		signal: "elm,state,highlighted"; \
		source: "elm"; \
		action: STATE_SET "highlighted" 0.0; \
		TARGET \
		transition: LINEAR 1.0; \
	} \
	program { name: "unhighlighted"; \
		signal: "elm,state,unhighlighted"; \
		source: "elm"; \
		action: STATE_SET "default" 0.0; \
		TARGET \
		transition: LINEAR 1.0; \
	}

#define PROGRAMS_LIST_BUTTON( TARGET ) \
	programs { \
		PROGRAM_LIST_DEFAULT( TARGET \
			target: "elm.padding.left"; \
			target: "elm.padding.right"; \
		) \
		PROGRAM_LIST_DISABLE( TARGET \
		) \
		PROGRAM_LIST_SELECT( TARGET \
		) \
		PROGRAM_LIST_HIGHLIGHT( TARGET ) \
		PROGRAM_LIST_SOUND \
	}

#define PROGRAM_LIST_SOUND \
	   program { name: "play_sound"; \
		  signal: "elm,state,clicked"; \
		  source: "elm"; \
		  script { \
			 run_program(PROGRAM:"play_sample"); \
		  } \
	   } \
	   program { \
		  name: "play_sample"; \
		  action: RUN_PLUGIN "touch_sound"; \
	   }


#define BUTTON_HEIGHT_INC	122

#define PART_LIST_BG \
		   PART(RECT, "bg",  \
			  description { state: "default" 0.0; \
				 color: 0 0 0 0; \
				 visible: 1; \
				} \
			)

	group {
		name: "elm/genlist/item/3button/default";
		data.item: "treesize" 0;
		data.item: "flips" "elm.flip.icon elm.flip.content";
		data.item: "contents" "base elm.icon.1.touch_area elm.icon.2.touch_area elm.icon.3.touch_area elm.icon.1 elm.icon.2 elm.icon.3 elm.swallow.center_check";
		data.item: "vi_effect" "off";

		parts {
			PART_LIST_BG
			PART_LIST_PADDINGS(
				LIST_BUTTON_PADDING_LEFT_SIZE_INC, LIST_BUTTON_PADDING_RIGHT_SIZE_INC,
				LIST_BUTTON_PADDING_2BUTTON_TOP_SIZE_INC, LIST_BUTTON_PADDING_BOTTOM_SIZE_INC
			)
			PART(SWALLOW, "base",
				DESC_LRTB("elm.padding.left", "elm.padding.right", "elm.padding.top", "elm.padding.bottom",
					min: 360 0;
					fixed: 1 0;
					visible: 1;
				)
			)
			part { name: "elm.icon.1.touch_area"; // left icon
//			   type: RECT;
			   type: SWALLOW;
			   repeat_events, 0;
			   description {
				  state: "default" 0.0;
				  color: 255 0 0 100;
				  visible: 1;
				  align: 0.5 0.5;
				  fixed: 1 1;
				  rel1 { relative: 0.0 0.0; to: "elm.icon.1"; offset: -5 -5;}
				  rel2 { relative: 1.0 1.0; to: "elm.icon.1"; offset: +5 +5;}
			   }
			   description {
				  state: "default" 0.1;
				  inherit: "default" 0.0;
				  rel1 { relative: 0.0 0.0; to: "elm.icon.1"; offset: -7 -7;}
				  rel2 { relative: 1.0 1.0; to: "elm.icon.1"; offset: +7 +7;}
			   }
			   description {
				  state: "default" 0.9;
				  inherit: "default" 0.0;
				  rel1 { relative: 0.0 0.0; to: "elm.icon.1"; offset: -8 -8;}
				  rel2 { relative: 1.0 1.0; to: "elm.icon.1"; offset: +8 +8;}
			   }
			}
			part { name: "elm.icon.2.touch_area"; // center icon
//			   type: RECT;
			   type: SWALLOW;
			   repeat_events, 0;
			   description {
				  state: "default" 0.0;
				  color: 0 255 0 100;
				  visible: 1;
				  align: 0.5 0.5;
				  fixed: 1 1;
				  rel1 { relative: 0.0 0.0; to: "elm.icon.2"; offset: -5 -5;}
				  rel2 { relative: 1.0 1.0; to: "elm.icon.2"; offset: +5 +5;}
			   }
			   description {
				  state: "default" 0.1;
				  inherit: "default" 0.0;
				  rel1 { relative: 0.0 0.0; to: "elm.icon.2"; offset: -7 -7;}
				  rel2 { relative: 1.0 1.0; to: "elm.icon.2"; offset: +7 +7;}
			   }
			   description {
				  state: "default" 0.9;
				  inherit: "default" 0.0;
				  rel1 { relative: 0.0 0.0; to: "elm.icon.2"; offset: -8 -8;}
				  rel2 { relative: 1.0 1.0; to: "elm.icon.2"; offset: +8 +8;}
			   }

			}
			part { name: "elm.icon.3.touch_area"; // right icon
//			   type: RECT;
			   type: SWALLOW;
			   repeat_events, 0;
			   description {
				  state: "default" 0.0;
				  color: 0 0 255 100;
				  visible: 1;
				  align: 0.5 0.5;
				  fixed: 1 1;
				  rel1 { relative: 0.0 0.0; to: "elm.icon.3"; offset: -6 -5;}
				  rel2 { relative: 1.0 1.0; to: "elm.icon.3"; offset: +6 +5;}
			   }
			   description {
				  state: "default" 0.1;
				  inherit: "default" 0.0;
				  rel1 { relative: 0.0 0.0; to: "elm.icon.3"; offset: -7 -7;}
				  rel2 { relative: 1.0 1.0; to: "elm.icon.3"; offset: +7 +7;}
			   }
			   description {
				  state: "default" 0.9;
				  inherit: "default" 0.0;
				  rel1 { relative: 0.0 0.0; to: "elm.icon.3"; offset: -9 -8;}
				  rel2 { relative: 1.0 1.0; to: "elm.icon.3"; offset: +9 +8;}
			   }
			}
			part { name: "elm.icon.1"; // left icon
			   type: SWALLOW;
			   repeat_events, 1;
			   description {
				  state: "default" 0.0;
				  //color: 255 0 0 255;
				  visible: 1;
				  align: 0.5 0;
				  fixed: 1 1;
				  min: 57 57;
				  max: 57 57;
				  rel1 { relative: 112/360 0; to: "base"; offset: 0 35;}
				  rel2 { relative: 112/360 0; to: "base"; offset: 0 35;}
			   }
			   description {
				  state: "default" 0.1;
				  inherit: "default" 0.0;
				  min: 57+(99-57)/2 57+(99-57)/2;
				  max: 57+(99-57)/2 57+(99-57)/2;
				  rel1 { relative: ((64+112)/2)/360 0; to: "base"; offset: 0 (35+12)/2;}
				  rel2 { relative: ((64+112)/2)/360 0; to: "base"; offset: 0 (35+12)/2;}
			   }
			   description {
				  state: "default" 0.9;
				  inherit: "default" 0.0;
				  min: 99 99;
				  max: 99 99;
				  rel1 { relative: 64/360 0; to: "base"; offset: 0 12;}
				  rel2 { relative: 64/360 0; to: "base"; offset: 0 12;}
			   }
			}
			part { name: "elm.icon.2"; // center icon
			   type: SWALLOW;
			   repeat_events, 1;
			   description {
				  state: "default" 0.0;
				  visible: 1;
				  align: 0.5 0;
				  fixed: 1 1;
				  min: 57 57;
				  max: 57 57;
				  rel1 { relative: 0.5 0; to: "bg"; offset: 0 20;}
				  rel2 { relative: 0.5 0; to: "bg"; offset: 0 20;}
			   }
			   description {
				  state: "default" 0.1;
				  inherit: "default" 0.0;
				  min: 57+(99-57)/2 57+(99-57)/2;
				  max: 57+(99-57)/2 57+(99-57)/2;
				  rel1 { relative: 0.5 0; to: "bg"; offset: 0 (20+12)/2;}
				  rel2 { relative: 0.5 0; to: "bg"; offset: 0 (20+12)/2;}
			   }
			   description {
				  state: "default" 0.9;
				  inherit: "default" 0.0;
				  min: 99 99;
				  max: 99 99;
				  rel1 { relative: 0.5 0; to: "base"; offset: 0 12;}
				  rel2 { relative: 0.5 0; to: "base"; offset: 0 12;}
			   }
			}
			part { name: "elm.icon.3"; // right icon
			   type: SWALLOW;
			   repeat_events, 1;
			   description {
				  state: "default" 0.0;
				  //color: 255 0 0 255;
				  visible: 1;
				  align: 0.5 0;
				  fixed: 1 1;
				  min: 57 57;
				  max: 57 57;
				  rel1 { relative: 249/360 0; to: "base"; offset: 0 35;}
				  rel2 { relative: 249/360 0; to: "base"; offset: 0 35;}
			   }
			   description {
				  state: "default" 0.1;
				  inherit: "default" 0.0;
				  min: 57+(99-57)/2 57+(99-57)/2;
				  max: 57+(99-57)/2 57+(99-57)/2;
				  rel1 { relative: ((249+297)/2)/360 0; to: "base"; offset: 0 (35+12)/2;}
				  rel2 { relative: ((249+297)/2)/360 0; to: "base"; offset: 0 (35+12)/2;}
			   }
			   description {
				  state: "default" 0.9;
				  inherit: "default" 0.0;
				  min: 99 99;
				  max: 99 99;
				  rel1 { relative: 297/360 0; to: "base"; offset: 0 12;}
				  rel2 { relative: 297/360 0; to: "base"; offset: 0 12;}
			   }
			}

			PART(SPACER, "elm.padding.fake",
				DESC_TB("elm.padding.top","elm.padding.bottom",
					min: LIST_BUTTON_PADDING_CENTER_SIZE_INC 0;
					max: LIST_BUTTON_PADDING_CENTER_SIZE_INC -1;
					fixed: 1 0;
				)
			)
			PART(SPACER, "elm.padding.center",
				DESC_LTB("elm.padding.fake", "elm.padding.top", "elm.padding.bottom",
					min: LIST_BUTTON_PADDING_CENTER_SIZE_INC 0;
					max: LIST_BUTTON_PADDING_CENTER_SIZE_INC -1;
					fixed: 1 0;
				)
			)
			PART(SWALLOW, "elm.swallow.center_check",
				description { state: "default" 0.0;
					align: 0.5 0.5;
				}
			)
		}
//Gesture VI
		program { name: "do_start_expand_0.0";
			action: STATE_SET "default" 0.0;
			target: "elm.icon.1";
			target: "elm.icon.2";
			target: "elm.icon.3";
			target: "elm.icon.1.touch_area";
			target: "elm.icon.2.touch_area";
			target: "elm.icon.3.touch_area";
			transition: LINEAR 0.3;
		}
		program { name: "do_start_expand_0.1";
			action: STATE_SET "default" 0.1;
			target: "elm.icon.1";
			target: "elm.icon.2";
			target: "elm.icon.3";
			target: "elm.icon.1.touch_area";
			target: "elm.icon.2.touch_area";
			target: "elm.icon.3.touch_area";
			transition: LINEAR 0.3;
		}
		program { name: "do_start_expand_0.9";
			action: STATE_SET "default" 0.9;
			target: "elm.icon.1";
			target: "elm.icon.2";
			target: "elm.icon.3";
			target: "elm.icon.1.touch_area";
			target: "elm.icon.2.touch_area";
			target: "elm.icon.3.touch_area";
			transition: LINEAR 0.3;
		}
		program { name: "start_expand_0.0";
		   source: "elm";
		   signal: "elm,action,ime,0.0";
		   script {
			  run_program(PROGRAM:"do_start_expand_0.0");
		   }
		}
		program { name: "start_expand_0.1";
		   source: "elm";
		   signal: "elm,action,ime,0.1";
		   script {
			  run_program(PROGRAM:"do_start_expand_0.1");
		   }
		}
		program { name: "start_expand_0.9";
		   source: "elm";
		   signal: "elm,action,ime,0.9";
		   script {
			  run_program(PROGRAM:"do_start_expand_0.9");
		   }
		}

//Rotary VI
		program { name: "do_rotary_start_expand_0.9";
			action: STATE_SET "default" 0.9;
			target: "elm.icon.1";
			target: "elm.icon.2";
			target: "elm.icon.3";
			target: "elm.icon.1.touch_area";
			target: "elm.icon.2.touch_area";
			target: "elm.icon.3.touch_area";
			transition: LINEAR 0.5;
		}
		program { name: "do_rotary_start_expand_0.0";
			action: STATE_SET "default" 0.0;
			target: "elm.icon.1";
			target: "elm.icon.2";
			target: "elm.icon.3";
			target: "elm.icon.1.touch_area";
			target: "elm.icon.2.touch_area";
			target: "elm.icon.3.touch_area";
			transition: LINEAR 0.5;
		}
		program { name: "rotary_start_expand_0.9";
		   source: "elm";
		   signal: "elm,action,rotary,ime,0.9";
		   script {
			  run_program(PROGRAM:"do_rotary_start_expand_0.9");
		   }
		}
		program { name: "rotary_start_expand_0.0";
		   source: "elm";
		   signal: "elm,action,rotary,ime,0.0";
		   script {
			  run_program(PROGRAM:"do_rotary_start_expand_0.0");
		   }
		}

	}

}
