#include "w-input-stt-button.edc"

#define VOICE_CANDIDATE_AREA_HEIGHT 56

collections
{
	base_scale: 1.3;

	plugins {
	   plugin {
		  name: "touch_sound";
		  source: "feedback";
		  param: "FEEDBACK_TYPE_SOUND FEEDBACK_PATTERN_TAP";
		  /* 2014.06.11 updated from libsvi(feedback)
		   Above plugin will run below external function:
		   int feedback_play_type(feedback_type_e type, feedback_pattern_e pattern);

		   param1: feedback_type_e
		   FEEDBACK_TYPE_NONE = 0,
		   FEEDBACK_TYPE_SOUND = 1,
		   FEEDBACK_TYPE_VIBRATION,
		   FEEDBACK_TYPE_LED,
		   FEEDBACK_TYPE_END

		   * param2 enumeration:
		   FEEDBACK_PATTERN_TAP = 0,
		   FEEDBACK_PATTERN_SIP,
		   FEEDBACK_PATTERN_SIP_BACKSPACE,
		   FEEDBACK_PATTERN_SIP_FUNCTION,
		   FEEDBACK_PATTERN_SIP_FJKEY,
		   ...

		   * Fore information, please refer the libsvi libraries.
		   * git: slp-info.sec.samsung.net:29418/magnolia/framework/system/libsvi
		   * web: http://slp-info.sec.samsung.net/gerrit/plugins/gitiles/magnolia/framework/system/libsvi
		   */
	   }
	   plugin {
		  name: "haptic_tap";
		  source: "feedback";
		  param: "FEEDBACK_TYPE_VIBRATION FEEDBACK_PATTERN_TAP";
	   }
	}

	images {
		// MIC
		image, "./bg/B13_mic_bg.png" COMP;
		image, "./icon/B13_mic.png" COMP;
		image, "./icon/B13_mic_Que.png" COMP;
		image, "./icon/B13_mic_Que_01.png" COMP;
		image, "./icon/B13_mic_procecessing_bg.png" COMP;
		image, "./text_downdrop.#.png" COMP;
		image, "./text_downdrop_press.#.png" COMP;

		image, "./input_ic_voice_mic.png" COMP;
		image, "./w_sip_mask_bg.png" COMP;
		image, "./tw_bottom_btn_bg.png" COMP;

		image, "./w_mode_ic_bg.png" COMP;

		image, "./b_stt_text_fade_out.png" COMP;
		image, "./b_stt_icon_btn.png" COMP;
		image, "./b_stt_confirm_icon.png" COMP;
		image, "./b_stt_send_icon.png" COMP;
	}

	color_classes 
	{
	   color_class 
	   {
	      name: "AO013";
	      color: 68	71 77 100;
	   }
	   color_class 
	   {
	      name: "AO014";
	      color: 0 0 0 100;
	   }
	   color_class 
	   {
	      name: "AO014P";
	      color: 0 0 0 100;
	   }
	   color_class 
	   {
	      name: "AO014D";
	      color: 0 0 0 35;
	   }
	   color_class 
	   {
	      name: "AO015L1";
	      color: 0 0 0 100;
	   }
	   color_class 
	   {
	      name: "AO015L1P";
	      color: 0 0 0 50;
	   }
	   color_class 
	   {
	      name: "AO015L1D";
	      color: 0 0 0 40;
	   }
	   color_class 
	   {
	      name: "AO0151";
	      color: 0 0 0 100;
	   }
	   color_class 
	   {
	      name: "AO0151P";
	      color: 0 0 0 50;
	   }
	   color_class 
	   {
	      name: "AO0151D";
	      color: 0 0 0 20;
	   }
	   color_class 
	   {
	      name: "AO0152";
	      color: 0 0 0 100;
	   }
	   color_class 
	   {
	      name: "AO015L2";
	      color: 0 0 0 100;
	   }
	   color_class 
	   {
	      name: "AO015L2P";
	      color: 0 0 0 50;
	   }
	   color_class 
	   {
	      name: "AO015L2D";
	      color: 0 0 0 40;
	   }
	   color_class 
	   {
	      name: "AO015L3";
	      color: 0 0 0 100;
	   }
	   color_class 
	   {
	      name: "AO01151";
	      color: 0 0 0 100;
	   }
	   color_class 
	   {
	      name: "AO01153L1";
	      color: 163 163 163 100;
	   }
	   color_class 
	   {
	      name: "AO01153L1P";
	      color: 61 61 61 100;
	   }
	   color_class 
	   {
	      name: "AO01153L1D";
	      color: 163 163 163 100;
	   }
	   color_class 
	   {
	      name: "AO01154L1";
	      color: 110 110 110 100;
	   }
	   color_class 
	   {
	      name: "AO01154L1P";
	      color: 41 41 41 100;
	   }
	   color_class 
	   {
	      name: "AO01154L1D";
	      color: 110 110 110 100;
	   }
	   color_class 
	   {
	      name: "AO01155L1";
	      color: 122 122 122 100;
	   }
	   color_class 
	   {
	      name: "AO01155L1P";
	      color: 33 33 33 100;
	   }
	   color_class 
	   {
	      name: "AO01155L1D";
	      color: 122 122 122 100;
	   }
	   color_class 
	   {
	      name: "AO01153L2";
	      color: 18 18 18 30;
	   }
	   color_class 
	   {
	      name: "AO01153L3";
	      color: 0 0 0 100;
	   }
	   color_class 
	   {
	      name: "AO01153L3P";
	      color: 0 0 0 100;
	   }
	   color_class 
	   {
	      name: "AO01153L3D";
	      color: 0 0 0 40;
	   }
	   color_class 
	   {
	      name: "AO0116";
	      color: 0 0 0 100;
	   }
	   color_class 
	   {
	      name: "AO0116P";
	      color: 0 0 0 50;
	   }
	   color_class 
	   {
	      name: "AO0116D";
	      color: 0 0 0 30;
	   }
	   color_class 
	   {
	      name: "AO01161";
	      color: 64 64 64 100;
	   }
	   color_class 
	   {
	      name: "AO01161P";
	      color: 38 38 38 100;
	   }
	   color_class 
	   {
	      name: "AO01161D";
	      color: 26 26 26 100;
	   }
	   color_class 
	   {
	      name: "AO0117";
	      color: 0 0 0 100;
	   }
	   color_class 
	   {
	      name: "AO0118";
	      color: 0 0 0 100;
	   }
	   color_class 
	   {
	      name: "AO0119";
	      color: 0 0 0 100;
	   }
	   color_class 
	   {
	      name: "AO0119P";
	      color: 0 0 0 100;
	   }
	   color_class 
	   {
	      name: "AO0119D";
	      color: 0 0 0 5;
	   }
	   color_class 
	   {
	      name: "AO031";
	      color: 0 0 0 100;
	   }
	   color_class 
	   {
	      name: "AO031P";
	      color: 0 0 0 40;
	   }
	   color_class 
	   {
	      name: "AO031L1";
	      color: 0 0 0 41;
	   }
	   color_class 
	   {
	      name: "AO031L1P";
	      color: 0 0 0 70;
	   }
	   color_class 
	   {
	      name: "AO0331";
	      color: 0 0 0 50;
	   }
	   color_class 
	   {
	      name: "AO0332";
	      color: 0 0 0 100;
	   }
	   color_class 
	   {
	      name: "AO034";
	      color: 102 102 102 100;
	   }
	   color_class 
	   {
	      name: "AO034P";
	      color: 0 0 0 100;
	   }
	   color_class 
	   {
	      name: "AO034D";
	      color: 0 0 0 30;
	   }
	   color_class 
	   {
	      name: "AO035";
	      color: 5 5 5 100;
	   }
	   color_class 
	   {
	      name: "AO0351";
	      color: 0 0 0 15;
	   }
	   color_class 
	   {
	      name: "AO036";
	      color: 0 0 0 100;
	   }
	   color_class 
	   {
	      name: "AO0361";
	      color: 0 0 0 50;
	   }
	   color_class 
	   {
	      name: "AO037";
	      color: 10 10 10 100;
	   }
	   color_class 
	   {
	      name: "AO037P";
	      color: 0 0 0 100;
	   }
	   color_class 
	   {
	      name: "AO037S";
	      color: 0 0 0 100;
	   }
	   color_class 
	   {
	      name: "AO038";
	      color: 0 0 0 100;
	   }
	   color_class 
	   {
	      name: "AO038P";
	      color: 0 0 0 50;
	   }
	   color_class 
	   {
	      name: "AO038D";
	      color: 0 0 0 40;
	   }
	   color_class 
	   {
	      name: "AT0113";
	      color: 0 0 0 100;
	   }
	   color_class 
	   {
	      name: "AT0113P";
	      color: 0 0 0 100;
	   }
	   color_class 
	   {
	      name: "AT0113D";
	      color: 0 0 0 70;
	   }
	   color_class 
	   {
	      name: "AT0113S";
	      color: 0 0 0 100;
	   }
	   color_class 
	   {
	      name: "AT0114";
#	      color: 0 0 0 100;
          color: 128 128 128 100;
	   }
	   color_class 
	   {
	      name: "AT0114D";
	      color: 0 0 0 5;
	   }
	   color_class 
	   {
	      name: "AT02111";
	      color: 0 0 0 100;
	   }
 	   color_class 
	   {
	      name: "AT02112";
	      color: 0 0 0 100;
	   }
	   color_class 
	   {
	      name: "AT02113";
	      color: 10 10 10 100;
	   }
	   color_class 
	   {
	      name: "AT021";
	      color: 0 0 0 100;
	   }
  	   color_class 
	   {
	      name: "AT022";
	      color: 0 0 0 100;
	   }
	   color_class 
	   {
	      name: "AT023";
	      color: 0 0 0 100;
	   }
	   color_class 
	   {
	      name: "AT023P";
	      color: 0 0 0 50;
	   }
 	   color_class 
	   {
	      name: "AT023D";
	      color: 0 0 0 40;
	   }
	}

	styles
	{
	   style { name, "textblock_style";
	      base, "font=Tizen:style=Regular font_size=36 align=center color=#FFFFFF  text_class=text_class wrap=word ellipsis=1.0";
		  tag,  "br" "\n";
		  tag,  "ps" "ps";
		  tag,  "hilight" "+ font=Tizen:style=Bold";
		  tag,  "b" "+ font=Tizen:style=Bold";
		  tag,  "tab" "\t";
	   }
	   style { name, "textblock_style_bottom";
	      base, "font=Tizen:style=Regular font_size=36 align=center color=#FFFFFF  text_class=text_class wrap=word ellipsis=1.0";
		  tag,  "br" "\n";
		  tag,  "ps" "ps";
		  tag,  "hilight" "+ font=Tizen:style=Bold";
		  tag,  "b" "+ font=Tizen:style=Bold";
		  tag,  "tab" "\t";
	   }
	}

	group
	{
		name, "mic_control";
		parts
		{
			part
			{
				name, "bg";
				type, RECT;
				scale, 1;
				description
				{
					state, "default" 0.0;
					rel1
					{
						relative, 0.0 0.0;
					}
					rel2
					{
						relative, 1.0 1.0;
					}
					visible: 1;
					color_class, "AO0118";
				}
			}
			part
			{
				name, "top_block";
				type, SPACER;
				scale, 1;
				description
				{
					state, "default" 0.0;
					min, 360 (360-103);
					align, 0.5 0;
					rel1
					{
						relative, 0.0 0.0;
						to, "bg";
					}
					rel2
					{
						relative, 1.0 0.0;
						to, "bg";
					}
				}
			}

			part
			{
				name, "text_area";
				type, SWALLOW;
				description
				{
					state, "default" 0.0;
					align, 0.5 1;
					min, 282 (360-103);
					max, 282 (360-103);

					rel1
					{
						relative, 39/360 1;
						to, "top_block";
						offset, 0 -1;
					}
					rel2
					{
						relative, 321/360 1;
						to, "top_block";
						offset, 0 -1;
					}
				}
			}
			part
			{
				name, "left_panel_area";
				type, SWALLOW;
				description
				{
					state, "default" 0.0;
					align, 0.5 0.5;
					rel1
					{
						relative, 0.0 0.0;
						to, "bg";
					}
					rel2
					{
						relative, 1.0 1.0;
						to, "bg";
					}
				}
			}


			part
			{
				name, "background";
				type, IMAGE;
				scale, 1;
				description
				{
					state, "default" 0.0;
					min, 360 100;
					max, 360 100;
					rel1
					{
						relative, 0 260/360;
						to, "bg";
					}
					rel2
					{
						relative, 1 1;
						to, "bg";
					}
					image.normal, "./tw_bottom_btn_bg.png";
					color: 128 128 128 128;
				}
				description
				{
					state, "pressed" 0.0;
					inherit, "default" 0.0;
					color: 128 128 128 128;
				}
				description
				{
					state, "dim" 0.0;
					inherit, "default" 0.0;
					color: 128 128 128 128;
				}
			}

			part
			{
				name, "EFFECT_BG_AREA";
				type, SPACER;
				description
				{
					state, "default" 0.0;
					min, 0 74;
					max, 9999 74;
					align, 0.5 1;
					rel1
					{
						relative, 0 1;
						to, "bg";
						offset, 0 -14;
					}
					rel2
					{
						relative, 1 1;
						to, "bg";
						offset, 0 -14;
					}
				}
			}
			part
			{
				name, "EFFECT_BG";
				type, SWALLOW;
				description
				{
					state, "default" 0.0;
					visible, 0;
					rel1
					{
						relative, 0 0;
						to, "EFFECT_BG_AREA";
					}
					rel2
					{
						relative, 1 1;
						to, "EFFECT_BG_AREA";
					}
				}
				description
				{
					state, "default" 0.1;
					inherit, "default" 0.0;
					visible, 1;
				}
			}


			part
			{
				name, "MIC_ICON";
				type, IMAGE;
				scale, 1;
				description
				{
					state, "default" 0.0;
					min, 50 50;
					max, 50 50;
					rel1
					{
						relative, 155/360 26/100;
						to, "background";
					}
					rel2
					{
						relative, 205/360 76/100;
						to, "background";
					}
					image.normal, "./input_ic_voice_mic.png";
				}
				description
				{
					state, "recording" 0.0;
					inherit, "default" 0.0;
					visible, 0;
				}
				description
				{
					state, "processing" 0.0;
					inherit, "default" 0.0;
					visible, 0;
				}
				description
				{
					state, "message" 0.0;
					inherit, "default" 0.0;
					rel1
					{
						relative, 155/360 41/100;
						to, "background";
					}
					rel2
					{
						relative, 205/360 91/100;
						to, "background";
					}
					visible, 1;
				}
			}



			//Part for mic button
			part
			{
				name, "MIC";
				type, SWALLOW;
				scale, 1;
				description
				{
					state, "default" 0.0;
					visible, 1;
					min, 290 100;
					max, 290 100;
					rel1
					{
						relative, 35/360 0.0;
						to, "background";
					}
					rel2
					{
						relative, 325/360 1.0;
						to, "background";
					}
				}
			}
			part
			{
				name, "PROGRESS_BAR";
				type, SWALLOW;
				scale, 1;
				description
				{
					state, "default" 0.0;
					min, 50 50;
					max, 50 50;
					visible, 0;
					rel1
					{
						relative, 155/360 27/100;
						to, "background";
					}
					rel2
					{
						relative, 205/360 77/100;
						to, "background";
					}
				}
				description
				{
					state, "message" 0.0;
					inherit, "default" 0.0;
				}
				description
				{
					state, "processing" 0.0;
					inherit, "default" 0.0;
					visible, 1;
				}
			}

			part
			{
				name, "guide_text_block";
				type, SPACER;
				description
				{
					state, "default" 0.0;
					align, 0.5 0;
					rel1
					{
						relative, 39/360 140/360;
						to, "bg";
					}
					rel2
					{
						relative, (360-39)/360 (140+42)/360;
						to, "bg";
					}
				}
				description
				{
					state, "bottom" 0.0;
					align, 0.5 0;
					rel1
					{
						relative, 74/360 (360-91)/360;
						to, "bg";
					}
					rel2
					{
						relative, (360-74)/360 (360-57)/360;
						to, "bg";
					}
				}
			}

			part
			{
				name, "elm.text";
				type, TEXTBLOCK;
				mouse_events, 0;
				scale, 1;
				description
				{
					state, "default" 0.0;
					visible, 1;
					align, 0.5 0.6;
					rel1.to, "guide_text_block";
					rel2.to, "guide_text_block";
					text
					{
						fit: 1 1;
						style, "textblock_style";
					}
					color, 120 120 120 120;
				}
				description
				{
					state, "bottom" 0.0;
					inherit, "default" 0.0;
					text
					{
						fit: 1 1;
						style, "textblock_style_bottom";
					}
					color, 120 120 120 120;
				}
			}
		}

		programs
		{
			program
			{
				name, 	"initial_view";
				signal, "mouse,clicked,1";
				source, "background";
				in, 	0 0.3;
				after, 	"emit_signal1";
			}

			program
			{
				name, 	"emit_signal1";
				action, SIGNAL_EMIT "idle,state,pulse,visible" "";
			}

			program
			{
				name, 	"listening";
				signal, "elm,state,listening";
				source, "elm";
				action, STATE_SET "recording" 0.0;
				target, "MIC_ICON";
			}

			program
			{
				name, 	"start_processing";
				signal, "elm,state,processing";
				source, "elm";
				action, STATE_SET "processing" 0.0;
				target, "PROGRESS_BAR";
				target, "MIC_ICON";
				transition, DECELERATE 0.3;
			}

			program
			{
				name, 	"idle";
				signal, "elm,state,init";
				source, "elm";
				action, STATE_SET "default" 0.0;
				target, "PROGRESS_BAR";
				target, "MIC_ICON";
				transition, DECELERATE 0.3;
			}
			program
			{
				name, "idle_message";
				signal, "elm,state,init_message";
				source, "elm";
				action, STATE_SET "message" 0.0;
				target, "PROGRESS_BAR";
				target, "MIC_ICON";
			}

			program
			{
				name, 	"text_show";
				signal, "idle,state,text,visible";
				source, "elm";
				action, STATE_SET "expand" 0.0;
				target, "elm.text";
			}

			program
			{
				name, 	"text_hide";
				signal, "idle,state,text,hidden";
				source, "elm";
				action, STATE_SET "default" 0.0;
				target, "elm.text";
			}
			program
			{
				name, 	"show_effect_part";
				signal, "elm,state,eq,show";
				source, "eq";
				action, STATE_SET "default" 0.1;
				target, "EFFECT_BG";
			}

			program
			{
				name, 	"hide_effect_part";
				signal, "elm,state,eq,hide";
				source, "eq";
				action, STATE_SET "default" 0.0;
				target, "EFFECT_BG";
			}

			program
			{
				name,	"guide_text_up";
				signal, "idle,state,guide_text,up";
				source, "elm";
				action, STATE_SET "default" 0.0;
				target, "guide_text_block";
			}
			program
			{
				name,	"guide_text_bottom";
				signal, "idle,state,guide_text,bottom";
				source, "elm";
				action, STATE_SET "bottom" 0.0;
				target, "guide_text_block";
			}


		}
	}

	group
	{
		name: "option_more_index";
		parts
		{
			part
			{
				name: "bg";
				type: SPACER;
				scale: 1;
				description
				{
					state: "default" 0.0;
					min: 360 360;
					max: -1 360;
				}
			}
			part
			{
				name: "scroller";
				type: SWALLOW;
				scale: 1;
				description
				{
					state: "default" 0.0;
					rel1.to: "bg";
					rel2.to: "bg";
				}
			}
			part
			{
				name: "controller";
				type: SWALLOW;
				scale: 1;
				description
				{
					state: "default" 0.0;
					align: 0.5 0.0;
					min: 360 40;
					max: 360 40;
					fixed: 0 1;
					rel1.to: "bg";
					rel1.relative: 0.0 0.0;
					rel2.to: "bg";
					rel2.relative: 1.0 0.0;
				}
			}
		}
	}

	group
	{
		name, "language_list";
		parts
		{
			part
			{
				name, "bg";
				type, RECT;
				scale, 1;
				description
				{
					state, "default" 0.0;
					min, 358 0;
					max, 358 223;
					rel1
					{
						relative, 0.0 0.0;
					}
					rel2
					{
						relative, 1.0 1.0;
					}
					color, 8 8 8 255;
				}
			}
			part
			{
				name, "list";
				type, SWALLOW;
				scale, 1;
				repeat_events, 0;
				description
				{
					state, "default" 0.0;
					rel1
					{
						relative, 0.0 0.0;
						to, "bg";
					}
					rel2
					{
						relative, 1.0 1.0;
						to, "bg";
					}
				}
			}
		}
	}

	group{
		name: "layout_textblock";

		script {
			 public timer_cb(val) {
				run_program(PROGRAM:"do_scroll");
			 }

		  }
		parts {
			part
			{
				name, "bg";
				type, SPACER;
				scale, 1;
				description
				{
					state, "default" 0.0;
					min, 282 39;
					rel1
					{
						relative, 0.0 0.0;
					}
					rel2
					{
						relative, 1.0 1.0;
					}
				}
			}
		   part { name: "elm.swallow.content";
			  scale: 1;
			  type: SWALLOW;
			  description { state: "default" 0.0;
				 min: 282 39;
				 color, 120 120 120 120;
			  }
		   }
		}
		programs {
			program
			{
				name, "scroll";
				signal, "scrolling";
				source, "entry";
				script {
					timer(3/10, "timer_cb", 0);
				}
			}
			program
			{
				name, "do_scroll";
				action, SIGNAL_EMIT "do_scroll" "entry";
			}
		}
	}

	group{ name: "entry_focused_layout";
		parts {
			part
			{
				name, "bg";
				type, RECT;
				scale, 1;
				description
				{
					state, "default" 0.0;
					rel1
					{
						relative, 0.0 0.0;
					}
					rel2
					{
						relative, 1.0 1.0;
					}
					visible: 1;
					color, 120 120 120 120;
				}
			}
			part { name: "padding_top";
				type: SPACER;
				scale: 1;
				description {
					state: "default" 0.0;
					align: 0.0 0.0;
					rel1.relative: 0.0 0.0;
					rel2.relative: 1.0 0.0;
					min: 0 20;
					fixed: 1 1;
				}
			}
			part { name: "padding_left";
				type: SPACER;
				scale: 1;
				description {
					state: "default" 0.0;
					align: 0.0 0.0;
					rel1.relative: 0.0 0.0;
					rel2.relative: 0.0 1.0;
					min: 73 0;
					fixed: 1 1;
				}
			}
			part { name: "padding_right";
				type: SPACER;
				scale: 1;
				description {
					state: "default" 0.0;
					align: 1.0 0.0;
					rel1.relative: 1.0 0.0;
					rel2.relative: 1.0 1.0;
					min: 73 0;
					fixed: 1 1;
				}
			}
			part {
				name: "contents";
				type: SWALLOW;
				scale: 1;
				description {
					state: "default" 0.0;
					rel1 { relative: 1.0 1.0; to_x: "padding_left"; to_y: "padding_top"; }
					rel2 { relative: 0.0 1.0; to_x: "padding_right"; to_y: "padding_top";}
					min:0 42;
					max: -1 42;
					align: 0.5 0;
				}
			}
		}
	}



#define PROGRESSBAR_ACTIVITY_SMALL_SIZE_INC 50
	group
	{
		name: "elm/progressbar/horizontal/voice_input/process/small";
		images {
			image: "style/tw_loading_small_00.png" COMP;
			image: "style/tw_loading_small_01.png" COMP;
			image: "style/tw_loading_small_02.png" COMP;
			image: "style/tw_loading_small_03.png" COMP;
			image: "style/tw_loading_small_04.png" COMP;
			image: "style/tw_loading_small_05.png" COMP;
			image: "style/tw_loading_small_06.png" COMP;
			image: "style/tw_loading_small_07.png" COMP;
			image: "style/tw_loading_small_08.png" COMP;
			image: "style/tw_loading_small_09.png" COMP;
			image: "style/tw_loading_small_10.png" COMP;
			image: "style/tw_loading_small_11.png" COMP;
			image: "style/tw_loading_small_12.png" COMP;
			image: "style/tw_loading_small_13.png" COMP;
			image: "style/tw_loading_small_14.png" COMP;
			image: "style/tw_loading_small_15.png" COMP;
			image: "style/tw_loading_small_16.png" COMP;
			image: "style/tw_loading_small_17.png" COMP;
			image: "style/tw_loading_small_18.png" COMP;
			image: "style/tw_loading_small_19.png" COMP;
			image: "style/tw_loading_small_20.png" COMP;
			image: "style/tw_loading_small_21.png" COMP;
			image: "style/tw_loading_small_22.png" COMP;
			image: "style/tw_loading_small_23.png" COMP;
			image: "style/tw_loading_small_24.png" COMP;
			image: "style/tw_loading_small_25.png" COMP;
			image: "style/tw_loading_small_26.png" COMP;
			image: "style/tw_loading_small_27.png" COMP;
			image: "style/tw_loading_small_28.png" COMP;
			image: "style/tw_loading_small_29.png" COMP;
			image: "style/tw_loading_small_30.png" COMP;
			image: "style/tw_loading_small_31.png" COMP;
			image: "style/tw_loading_small_32.png" COMP;
			image: "style/tw_loading_small_33.png" COMP;
			image: "style/tw_loading_small_34.png" COMP;
			image: "style/tw_loading_small_35.png" COMP;
			image: "style/tw_loading_small_36.png" COMP;
			image: "style/tw_loading_small_37.png" COMP;
			image: "style/tw_loading_small_38.png" COMP;
			image: "style/tw_loading_small_39.png" COMP;
			image: "style/tw_loading_small_40.png" COMP;
			image: "style/tw_loading_small_41.png" COMP;
			image: "style/tw_loading_small_42.png" COMP;
			image: "style/tw_loading_small_43.png" COMP;
			image: "style/tw_loading_small_44.png" COMP;
			image: "style/tw_loading_small_45.png" COMP;
			image: "style/tw_loading_small_46.png" COMP;
			image: "style/tw_loading_small_47.png" COMP;
			image: "style/tw_loading_small_48.png" COMP;
			image: "style/tw_loading_small_49.png" COMP;
			image: "style/tw_loading_small_50.png" COMP;
			image: "style/tw_loading_small_51.png" COMP;
			image: "style/tw_loading_small_52.png" COMP;
			image: "style/tw_loading_small_53.png" COMP;
			image: "style/tw_loading_small_54.png" COMP;
			image: "style/tw_loading_small_55.png" COMP;
			image: "style/tw_loading_small_56.png" COMP;
			image: "style/tw_loading_small_57.png" COMP;
			image: "style/tw_loading_small_58.png" COMP;
			image: "style/tw_loading_small_59.png" COMP;
			image: "style/tw_loading_small_60.png" COMP;
			image: "style/tw_loading_small_61.png" COMP;
			image: "style/tw_loading_small_62.png" COMP;
			image: "style/tw_loading_small_63.png" COMP;
			image: "style/tw_loading_small_64.png" COMP;
		}
		parts {
			part {
				name: "access";
				type: RECT;
				description
				{
					state: "default" 0.0;
					fixed: 1 1;
					color: 0 0 0 0;
				}
			}
			part {
				name: "elm.background.progressbar";
				mouse_events: 0;
				scale: 1;
				type: RECT;
				description {
					state: "default" 0.0;
				}
			}
			part {
				name: "bar";
				mouse_events: 0;
				scale: 1;
				clip_to: "elm.background.progressbar";
				description {
					state: "default" 0.0;
					min: PROGRESSBAR_ACTIVITY_SMALL_SIZE_INC PROGRESSBAR_ACTIVITY_SMALL_SIZE_INC;
					max: PROGRESSBAR_ACTIVITY_SMALL_SIZE_INC PROGRESSBAR_ACTIVITY_SMALL_SIZE_INC;
					fixed, 1 1;
					aspect: 1.0 1.0;
					aspect_preference: BOTH;
					image.normal: "style/tw_loading_small_00.png";
					image.tween: "style/tw_loading_small_01.png";
					image.tween: "style/tw_loading_small_02.png";
					image.tween: "style/tw_loading_small_03.png";
					image.tween: "style/tw_loading_small_04.png";
					image.tween: "style/tw_loading_small_05.png";
					image.tween: "style/tw_loading_small_06.png";
					image.tween: "style/tw_loading_small_07.png";
					image.tween: "style/tw_loading_small_08.png";
					image.tween: "style/tw_loading_small_09.png";
					image.tween: "style/tw_loading_small_10.png";
					image.tween: "style/tw_loading_small_11.png";
					image.tween: "style/tw_loading_small_12.png";
					image.tween: "style/tw_loading_small_13.png";
					image.tween: "style/tw_loading_small_14.png";
					image.tween: "style/tw_loading_small_15.png";
					image.tween: "style/tw_loading_small_16.png";
					image.tween: "style/tw_loading_small_17.png";
					image.tween: "style/tw_loading_small_18.png";
					image.tween: "style/tw_loading_small_19.png";
					image.tween: "style/tw_loading_small_20.png";
					image.tween: "style/tw_loading_small_21.png";
					image.tween: "style/tw_loading_small_22.png";
					image.tween: "style/tw_loading_small_23.png";
					image.tween: "style/tw_loading_small_24.png";
					image.tween: "style/tw_loading_small_25.png";
					image.tween: "style/tw_loading_small_26.png";
					image.tween: "style/tw_loading_small_27.png";
					image.tween: "style/tw_loading_small_28.png";
					image.tween: "style/tw_loading_small_29.png";
					image.tween: "style/tw_loading_small_30.png";
					image.tween: "style/tw_loading_small_31.png";
					image.tween: "style/tw_loading_small_32.png";
					image.tween: "style/tw_loading_small_33.png";
					image.tween: "style/tw_loading_small_34.png";
					image.tween: "style/tw_loading_small_35.png";
					image.tween: "style/tw_loading_small_36.png";
					image.tween: "style/tw_loading_small_37.png";
					image.tween: "style/tw_loading_small_38.png";
					image.tween: "style/tw_loading_small_39.png";
					image.tween: "style/tw_loading_small_40.png";
					image.tween: "style/tw_loading_small_41.png";
					image.tween: "style/tw_loading_small_42.png";
					image.tween: "style/tw_loading_small_43.png";
					image.tween: "style/tw_loading_small_44.png";
					image.tween: "style/tw_loading_small_45.png";
					image.tween: "style/tw_loading_small_46.png";
					image.tween: "style/tw_loading_small_47.png";
					image.tween: "style/tw_loading_small_48.png";
					image.tween: "style/tw_loading_small_48.png";
					image.tween: "style/tw_loading_small_49.png";
					image.tween: "style/tw_loading_small_50.png";
					image.tween: "style/tw_loading_small_51.png";
					image.tween: "style/tw_loading_small_52.png";
					image.tween: "style/tw_loading_small_53.png";
					image.tween: "style/tw_loading_small_54.png";
					image.tween: "style/tw_loading_small_55.png";
					image.tween: "style/tw_loading_small_56.png";
					image.tween: "style/tw_loading_small_57.png";
					image.tween: "style/tw_loading_small_58.png";
					image.tween: "style/tw_loading_small_59.png";
					image.tween: "style/tw_loading_small_60.png";
					image.tween: "style/tw_loading_small_61.png";
					image.tween: "style/tw_loading_small_62.png";
					image.tween: "style/tw_loading_small_63.png";
					image.tween: "style/tw_loading_small_64.png";
					color: 128 128 128 128;
				}
			}
		}
		programs {
			program {
				name: "start_pulse";
				signal: "elm,state,pulse,start";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "bar";
				transition: LINEAR 1.8;
				after: "start_pulse";
			}
			program {
				name: "stop_pulse";
				signal: "elm,state,pulse,stop";
				source: "elm";
				action: ACTION_STOP;
				target: "start_pulse";
				after: "init_pulse";
			}
			program { name: "init_pulse";
				action: STATE_SET "default" 0.0;
				target: "bar";
			}
		}
	}


#define BUTTON_PADDING_SIZE_INC                            20 0
#define BUTTON_HEIGHT_INC                                  122
#define BUTTON_ICON_SIZE_INC                               60 60
   group { name: "elm/button/base/default";
      script {
         public mouse_down = 0;
         public multi_down = 0;
      }
      parts {
         part { name: "bg";
            type: RECT;
            scale: 1;
            description { state: "default" 0.0;
               min: 0 BUTTON_HEIGHT_INC;
               color: 128 128 128 128;
            }
            description { state: "pressed" 0.0;
               inherit: "default" 0.0;
               color: 128 128 128 128;
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               color: 128 128 128 128;
            }
         }
         part { name: "padding_left_top";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               align: 0.0 0.0;
               rel2.relative: 0.0 0.0;
               min: BUTTON_PADDING_SIZE_INC;
               fixed: 1 1;
            }
         }
         part { name: "padding_right_bottom";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               align: 1.0 1.0;
               rel1.relative: 1.0 1.0;
               min: BUTTON_PADDING_SIZE_INC;
               fixed: 1 1;
            }
         }
         part { name: "icon_rect";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               align: 0.0 0.5;
               rel1 {
                  relative: 1.0 1.0;
                  to: "padding_left_top";
               }
               rel2 {
                  relative: 1.0 0.0;
                  to_x: "padding_left_top";
                  to_y: "padding_right_bottom";
               }
               min: 0 0;
               fixed: 1 1;
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               min: BUTTON_ICON_SIZE_INC;
               max: BUTTON_ICON_SIZE_INC;
               fixed: 1 1;
            }
         }
         part { name: "elm.swallow.content";
            type: SWALLOW;
            clip_to: "elm.swallow.content.clip";
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
               align: 0.0 0.5;
               rel1 {
                  relative: 1.0 1.0;
                  to: "padding_left_top";
               }
               rel2 {
                  relative: 1.0 0.0;
                  to_x: "padding_left_top";
                  to_y: "padding_right_bottom";
               }
               fixed: 1 0;
            }
            description { state: "visible" 0.0;
               fixed: 1 1;
               min: BUTTON_ICON_SIZE_INC;
               max: BUTTON_ICON_SIZE_INC;
               align: 1.0 0.5;
               rel1 {
                  relative: 0.0 1.0;
                  to_x: "elm.text";
                  to_y: "padding_left_top";
               }
               rel2 {
                  relative: 0.0 0.0;
                  to_x: "elm.text";
                  to_y: "padding_right_bottom";
               }
            }
            description { state: "icononly" 0.0;
               min: BUTTON_ICON_SIZE_INC;
               max: BUTTON_ICON_SIZE_INC;
            }
         }
         part { name: "elm.text";
            type: TEXTBLOCK;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               fixed: 1 1;
               rel1 {
                  relative: 1.0 1.0;
                  to_x: "icon_rect";
                  to_y: "padding_left_top";
               }
               rel2 {
                  relative: 0.0 0.0;
                  to: "padding_right_bottom";
               }
               text {
                  max: 1 0;
                  style: "button_general_text_normal";
               }
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               text.style: "button_general_text_dim";
            }
            description { state: "pressed" 0.0;
               inherit: "default" 0.0;
               text.style: "button_general_text_press";
            }
         }
         part { name: "elm.swallow.content.clip";
            type: RECT;
            scale: 1;
            description { state: "default" 0.0;
               color: 128 128 128 128;
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               color: 128 128 128 128;
            }
         }
         part { name: "event";
            type: RECT;
            scale: 1;
            description { state: "default" 0.0;
               color: 0 0 0 0;
               rel1.to: "bg";
               rel2.to: "bg";
            }
         }
      }
      programs {
         program { name: "pressed";
            signal: "mouse,down,1*";
            source: "event";
            script {
               if ((get_int(multi_down) == 0) && (get_int(mouse_down) == 0))
                 {
                     set_int(mouse_down, 1);
                     run_program(PROGRAM:"button_press1");
                 }
            }
         }
         program { name: "button_press1";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"bg", st, 30, vl);
               if (strcmp(st, "disabled")) {
                  set_state(PART:"bg", "pressed", 0.0);
                  set_state(PART:"elm.text", "pressed", 0.0);
                  emit("elm,action,press", "");
               }
            }
         }
         program { name: "unpressed";
            signal: "mouse,up,1";
            source: "event";
            script {
               if (get_int(mouse_down) == 1) {
                 set_int(mouse_down, 0);
                 run_program(PROGRAM:"button_unpress1");
               }
            }
         }
         program { name: "button_unpress1";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"bg", st, 30, vl);
               if (strcmp(st, "disabled")) {
                  set_state(PART:"bg", "default", 0.0);
                  set_state(PART:"elm.text", "default", 0.0);
                  emit("elm,action,unpress", "");
               }
            }
         }
         program { name: "touch_snd";
            signal: "mouse,clicked,1";
            source: "event";
            script {
               new st[31];
               new Float:vl;
               if (get_int(multi_down) == 0) {
                  get_state(PART:"bg", st, 30, vl);
                  if (strcmp(st, "disabled")) {
                     //run_program(PROGRAM:"play_sample");
                     emit("elm,action,click", "");
                  }
               }
            }
         }
         program {
            name: "play_sample";
            action: RUN_PLUGIN "touch_sound";
         }
         program { name: "text_show";
            signal: "elm,state,text,visible";
            source: "elm";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"elm.swallow.content", st, 30, vl);
               if (!strcmp(st, "icononly"))
                 {
                    set_state(PART:"elm.swallow.content", "visible", 0.0);
                    set_state(PART:"icon_rect", "visible", 0.0);
                 }
               get_state(PART:"bg", st, 30, vl);
               if (strcmp(st, "disabled"))
                  set_state(PART:"elm.text", "default", 0.0);
               else
                  set_state(PART:"elm.text", "disabled", 0.0);
            }
         }
         program { name: "text_hide";
            signal: "elm,state,text,hidden";
            source: "elm";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"elm.swallow.content", st, 30, vl);
               if (!strcmp(st, "visible"))
                 {
                    set_state(PART:"elm.swallow.content", "icononly", 0.0);
                    set_state(PART:"icon_rect", "default", 0.0);
                 }
               set_state(PART:"elm.text", "default", 0.0);
            }
         }
         program { name: "icon_show";
            signal: "elm,state,icon,visible";
            source: "elm";
            action: STATE_SET "visible" 0.0;
            target: "elm.swallow.content";
            target: "icon_rect";
         }
         program { name: "icon_hide";
            signal: "elm,state,icon,hidden";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "elm.swallow.content";
            target: "icon_rect";
         }
         program { name: "disable";
            signal: "elm,state,disabled";
            source: "elm";
            action: STATE_SET "disabled" 0.0;
            target: "bg";
            target: "elm.swallow.content.clip";
            target: "elm.text";
         }
         program { name: "enable";
            signal: "elm,state,enabled";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "bg";
            target: "elm.swallow.content.clip";
            target: "elm.text";
         }
         program { name: "multi_down";
            signal: "elm,action,multi,down";
            source: "elm";
            script {
               set_int(multi_down, 1);
            }
         }
         program { name: "multi_up";
            signal: "elm,action,multi,up";
            source: "elm";
            script {
               set_int(multi_down, 0);
            }
         }
      }
   }

	group { name: "elm/button/base/ime_transparent";
	  inherit: "elm/button/base/default";
	  parts {
		  part { name: "bg";
			 type: RECT;
			 scale: 1;
			 description { state: "default" 0.0;
				min: 0 112;
				visible: 0;
			 }
			 description { state: "pressed" 0.0;
				inherit: "default" 0.0;
			 }
			 description { state: "disabled" 0.0;
				inherit: "default" 0.0;
				}
			}
		}
	}

	group { name: "elm/button/base/ime_button";
	  alias: "elm/button/base/ime_button_stt";
	  inherit: "elm/button/base/default";
	  parts {
		  part { name: "bg";
			 type: IMAGE;
			 scale: 1;
			 description { state: "default" 0.0;
				min: 0 0;
				color_class: "AO01153L1";
				visible: 1;
				image.normal: "./w_mode_ic_bg.png";
			 }
			 description { state: "pressed" 0.0;
				inherit: "default" 0.0;
				color_class: "AO01153L1P";
			 }
			 description { state: "disabled" 0.0;
				inherit: "default" 0.0;
				color: 128 128 128 128;
				}
			}
         part { name: "elm.swallow.content";
            type: SWALLOW;
            scale: 1;
            clip_to: "elm.swallow.content.clip";
            description { state: "default" 0.0;
               visible: 1;
               align: 0.5 0.5;
               rel1 { relative: 0.0 0.0; to: "bg";}
               rel2 { relative: 1.0 1.0; to: "bg";}
               fixed: 1 1;
            }
            description { state: "visible" 0.0;
				inherit: "default" 0.0;
				visible: 1;
            }
            description { state: "icononly" 0.0;
				inherit: "default" 0.0;
				visible: 1;
            }
         }
         part { name: "elm.swallow.content.clip";
            type: RECT;
            scale: 1;
            description { state: "default" 0.0;
               color_class: "AO01153L3";
            }
		    description { state: "pressed" 0.0;
			   inherit: "default" 0.0;
			   color_class: "AO01153L3P";
			}
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               color: 128 128 128 128;
            }
         }
         part { name: "elm.swallow.content_ef";
            type: SWALLOW;
            scale: 1;
            description { state: "default" 0.0;
               visible: 1;
               align: 0.5 0.5;
               rel1 { relative: 0.0 0.0; to: "bg";}
               rel2 { relative: 1.0 1.0; to: "bg";}
               fixed: 1 1;
            }
         }
	  }
      programs {
         program { name: "pressed";
            signal: "mouse,down,1*";
            source: "event";
            script {
               if ((get_int(multi_down) == 0) && (get_int(mouse_down) == 0))
                 {
                     set_int(mouse_down, 1);
                     run_program(PROGRAM:"button_press1");
                 }
            }
         }
         program { name: "button_press1";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"bg", st, 30, vl);
               if (strcmp(st, "disabled")) {
                  set_state(PART:"bg", "pressed", 0.0);
                  set_state(PART:"elm.swallow.content.clip", "pressed", 0.0);
                  emit("elm,action,press", "");
               }
            }
         }
         program { name: "unpressed";
            signal: "mouse,up,1";
            source: "event";
            script {
               if (get_int(mouse_down) == 1) {
                 set_int(mouse_down, 0);
                 run_program(PROGRAM:"button_unpress1");
               }
            }
         }
         program { name: "button_unpress1";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"bg", st, 30, vl);
               if (strcmp(st, "disabled")) {
                  set_state(PART:"bg", "default", 0.0);
                  set_state(PART:"elm.swallow.content.clip", "default", 0.0);
                  emit("elm,action,unpress", "");
               }
            }
         }
      }
	}

	group { name: "elm/button/base/ime_button_emoticon";
	  inherit: "elm/button/base/ime_button";
	  parts {
		  part { name: "bg";
			 type: IMAGE;
			 scale: 1;
			 description { state: "default" 0.0;
				min: 0 0;
				color_class: "AO01154L1";
				visible: 1;
				image.normal: "./w_mode_ic_bg.png";
			 }
			 description { state: "pressed" 0.0;
				inherit: "default" 0.0;
				color_class: "AO01154L1P";
			 }
			 description { state: "disabled" 0.0;
				inherit: "default" 0.0;
				color: 128 128 128 128;
				}
			}
		}
	}

	group { name: "elm/button/base/ime_button_keyboard";
	  inherit: "elm/button/base/ime_button";
	  parts {
		  part { name: "bg";
			 type: IMAGE;
			 scale: 1;
			 description { state: "default" 0.0;
				min: 0 0;
				color_class: "AO01155L1";
				visible: 1;
				image.normal: "./w_mode_ic_bg.png";
			 }
			 description { state: "pressed" 0.0;
				inherit: "default" 0.0;
				color_class: "AO01155L1P";
			 }
			 description { state: "disabled" 0.0;
				inherit: "default" 0.0;
				color: 128 128 128 128;
				}
			}
		}
	}

	group { name: "elm/button/base/ime_button_template";
	  inherit: "elm/button/base/ime_button";
	  parts {
		  part { name: "bg";
			 type: IMAGE;
			 scale: 1;
			 description { state: "default" 0.0;
				min: 76 76;
				max: 76 76;
				color_class: "AO01161";
				visible: 1;
				image.normal: "./w_mode_ic_bg.png";
			 }
			 description { state: "pressed" 0.0;
				inherit: "default" 0.0;
				color_class: "AO01161P";
			 }
			 description { state: "disabled" 0.0;
				inherit: "default" 0.0;
				color_class: "AO01161D";
				}
			}
         part { name: "elm.swallow.content.clip";
            type: RECT;
            scale: 1;
            description { state: "default" 0.0;
               color_class: "AO0116";
            }
		    description { state: "pressed" 0.0;
			   inherit: "default" 0.0;
			   color_class: "AO0116P";
			}
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               color_class: "AO0116D";
            }
         }
		}
	}

	group { name: "elm/button/base/ime_button_stt_confirm";
	  inherit: "elm/button/base/ime_button";
	  parts {
		  part { name: "bg";
			 type: IMAGE;
			 scale: 1;
			 description { state: "default" 0.0;
				min: 0 0;
				color_class: "AO015L2";
				visible: 0;
				image.normal: "./b_stt_icon_btn.png";
			 }
			 description { state: "pressed" 0.0;
				inherit: "default" 0.0;
				color_class: "AO015L2P";
			 }
			 description { state: "disabled" 0.0;
				inherit: "default" 0.0;
				color_class: "AO015L2D";
				}
			}
		  part { name: "elm.swallow.content.clip";
            type: RECT;
            scale: 1;
            description { state: "default" 0.0;
               color_class: "AO015L2";
            }
		    description { state: "pressed" 0.0;
			   inherit: "default" 0.0;
			   color_class: "AO015L2P";
			}
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               color_class: "AO015L2D";
            }
         }
		}
	}

	group { name: "elm/button/base/touch_area";
	  inherit: "elm/button/base/default";
	  parts {
		  part { name: "bg";
			 type: RECT;
			 scale: 1;
			 description { state: "default" 0.0;
				min: 0 0;
				color: 0 0 0 0;
				visible: 1;
			 }
			 description { state: "pressed" 0.0;
				inherit: "default" 0.0;
			 }
			 description { state: "disabled" 0.0;
				inherit: "default" 0.0;
				}
			}
		}
      programs {
		  program { name: "touch_snd";
			 signal: "mouse,clicked,1";
			 source: "event";
			 script {
				new st[31];
				new Float:vl;
				if (get_int(multi_down) == 0) {
				   get_state(PART:"bg", st, 30, vl);
				   if (strcmp(st, "disabled")) {
					  run_program(PROGRAM:"play_sample");
					  emit("elm,action,click", "");
				   }
				}
			 }
		  }
      }
	}

#define NAVIFRAME_VIEW_TRANS_TIME 0.4 //time for push and pop
#define NAVIFRAME_TITLE_TRANS_TIME 0.5 //Title transition time
#define NAVIFRAME_TITLE_EXPAND_TRANS_TIME 0.5 //Title Expansion transition time
#define NAVIFRAME_TEXT_FADE_OUT_CALC_TIME 0.2 //Text fade out calculation time
#define ACTIONBAR_PADDING_SIZE_INC 64
#define ACTIONBAR_HEIGHT_INC 115
#define ACTIONBAR_TEXT_SIZE_INC 39
#define ACTIONBAR_TEXT_TOP_PADDING_SIZE_INC 51
#define ACTIONBAR_TEXT_BOTTOM_PADDING_SIZE_INC 25
#define ACTIONBAR_TEX_SLIDING_SPEED 0.006
#define ACTIONBAR_TEX_SLIDING_START_WAITING_TIME 0.8
#define HIDDEN_BUTTON_HEIGHT_INC 88

#define STYLE_TAG_MATCH \
	tag: "match" "+ color=#ffffff color_class=T0212";

styles {
	style { name: "action_bar_title";
		base: "font=Tizen:style=Regular font_size="ACTIONBAR_TEXT_SIZE_INC" color=#FFFFFF color_class=T012 text_class=T012";
		STYLE_TAG_MATCH
	}
}

group { name: "elm_naviframe_item_basic_customized";
	data.item: "tizen_zoom" 1;
	script {
		public g_mirrored = 0; //Mirrored on/off status
		public g_text_fade_out_calc_timer = 0; //Text fade out calculation timer

		public g_duration_1st;
		public g_duration_2nd;
		public g_timer_id;
		public g_anim_id;
		public g_sliding_start;

		public title_text_fade_out() {
			new x, y, w, h, w2;

			if (get_int(g_text_fade_out_calc_timer)) {
				cancel_timer(g_text_fade_out_calc_timer);
				set_int(g_text_fade_out_calc_timer, 0);
			}

			get_geometry(PART:"elm.text.title", x, y, w, h);
			get_geometry(PART:"title_text_bg", x, y, w2, h);
		}

		public init() {
			slide_stop();
			set_float(g_duration_1st, 0);
			set_float(g_duration_2nd, 0);
			set_int(g_timer_id, 0);
			set_int(g_anim_id, 0);
			set_int(g_sliding_start, 0);
		}
		public slide_first_anim(val, Float:pos) {
			set_tween_state(PART:"elm.text.title", pos, "slide", 0.0, "slide_1", 0.0);
			if (pos >= 1.0) {
				cancel_anim(get_int(g_anim_id));
				set_int(g_anim_id, anim(get_float(g_duration_2nd), "slide_second_anim", 1));
			}
		}
		public slide_second_anim(val, Float:pos) {
			set_tween_state(PART:"elm.text.title", pos, "slide_2", 0.0, "slide", 0.0);
			if (pos >= 1.0)
				slide_stop();
			}
		public slide_first() {
			check_size();
			if (get_int(g_sliding_start)) {
				set_state(PART:"elm.text.title", "slide", 0.0);
				get_duration();
				set_int(g_anim_id, anim(get_float(g_duration_1st), "slide_first_anim", 1));
			}
		}
		public slide_start() {
			set_int(g_timer_id, timer(ACTIONBAR_TEX_SLIDING_START_WAITING_TIME, "slide_first", 1));
		}
		public slide_stop() {
			cancel_anim(get_int(g_anim_id));
			set_state(PART:"elm.text.title", "default", 0.0);
			set_int(g_sliding_start, 0);
		}
		public check_size() {
			new x, y, w, w1, h;
			get_geometry(PART:"elm.text.title", x, y, w, h);
			get_geometry(PART:"title_text_clip", x, y, w1, h);
			if (w >= w1) {
				set_int(g_sliding_start, 1);
			}
			else {
				set_int(g_sliding_start, 0);
			}
		}
		public get_duration() {
			new x, y, w, w1, h;
			get_geometry(PART:"elm.text.title", x, y, w, h);
			get_geometry(PART:"title_text_clip", x, y, w1, h);
			set_float(g_duration_1st, w * ACTIONBAR_TEX_SLIDING_SPEED);
			set_float(g_duration_2nd, w1 * ACTIONBAR_TEX_SLIDING_SPEED);
		}
	}
	parts {
		part { name: "clipper";
			type: RECT;
			description { state: "default" 0.0;
			visible: 1;
			}
			description { state: "hide" 0.0;
				visible: 0;
			}
		}
		part { name: "base";
			type: RECT;
			mouse_events: 0;
			scale: 1;
			clip_to: "clipper";
			description { state: "default" 0.0;
				color: 128 128 128 128;
			}
		}
		part { name: "title_expand";
			type: RECT;
			scale: 1;
			repeat_events: 0;
			clip_to: "clipper";
			description { state: "default" 0.0;
				min: 0 HIDDEN_BUTTON_HEIGHT_INC;
				max: -1 HIDDEN_BUTTON_HEIGHT_INC;
				fixed: 1 1;
				align: 0.5 1.0;
				visible: 0;
				color: 255 255 255 0;
				rel1 { relative: 0.0 1.0; to_x: "base"; to_y: "title_bg"; }
				rel2 { relative: 1.0 1.0; to_x: "base"; to_y: "title_bg"; }
			}
			description { state: "show" 0.0;
				inherit: "default" 0.0;
				align: 0.5 0.0;
				visible: 1;
			}
		}
		part { name: "title_clip";
			type: RECT;
			clip_to: "clipper";
			description { state: "default" 0.0;
				visible: 1;
				rel1.to: "title_bg";
				rel2.to: "title_bg";
			}
			description { state: "hide" 0.0;
				inherit: "default" 0.0;
				visible: 0;
			}
		}
		part { name: "title_bg";
			type: RECT;
			scale: 1;
			clip_to: "title_clip";
			description { state: "default" 0.0;
				min: 0 ACTIONBAR_HEIGHT_INC;
				max: -1 ACTIONBAR_HEIGHT_INC;
				fixed: 0 1;
				align: 0.5 0.0;
				rel1 { relative: 0.0 0.0; to: "base"; }
				rel2 { relative: 1.0 0.0; to: "base"; }
				color: 255 255 255 0;
			}
			description { state: "hide_trans" 0.0;
				inherit: "default" 0.0;
				align: 0.5 1.0;
			}
			description { state: "hide" 0.0;
				inherit: "default" 0.0;
				min: 0 0;
				max: -1 0;
			}
		}
		part { name: "title_text_bg";
			type: SPACER;
			scale: 1;
			description { state: "default" 0.0;
				rel1 { relative: 1.0 1.0; to_x: "left_padding"; to_y: "top_padding"; }
				rel2 { relative: 0.0 0.0; to: "right_padding"; to_y: "bottom_padding"; }
				fixed: 0 1;
			}
		}
		part { name: "title_text_clip";
			type: RECT;
			scale: 1;
			clip_to: "title_clip";
			description { state: "default" 0.0;
				rel1.to: "title_text_bg";
				rel2.to: "title_text_bg";
			}
		}
		part { name: "elm.text.title";
			type: TEXTBLOCK;
			scale: 1;
			clip_to: "title_text_clip";
			description { state: "default" 0.0;
				text {
					min: 0 1;
					max: 1 1;
					ellipsis: -1.0;
//					fade_ellipsis: 1.0;
					style: "action_bar_title";
				}
				fixed: 1 1;
				align: 0.5 0.5;
				rel1.to: "title_text_bg"; rel2.to: "title_text_bg";
			}
			description { state: "slide" 0.0;
				inherit: "default" 0.0;
				align: 0.0 0.5;
				rel1 {
					relative: 1.0 1.0;
					to_x: "left_padding";
					to_y: "top_padding";
				}
				rel2 {
					relative: 1.0 0.0;
					to_x: "left_padding";
					to_y: "bottom_padding";
				}
				text.min: 1 1;
			}
			description { state: "slide_1" 0.0;
				inherit: "default" 0.0;
				align: 1.0 0.5;
				rel1 {
					relative: 1.0 1.0;
					to_x: "left_padding";
					to_y: "top_padding";
				}
				rel2 {
					relative: 1.0 0.0;
					to_x: "left_padding";
					to_y: "bottom_padding";
				}
				text.min: 1 1;
			}
			description { state: "slide_2" 0.0;
				inherit: "default" 0.0;
				align: 0.0 0.5;
				rel1 {
					relative: 0.0 1.0;
					to_x: "right_padding";
					to_y: "top_padding";
				}
				rel2 {
					relative: 0.0 0.0;
					to_x: "right_padding";
					to_y: "bottom_padding";
				}
				text.min: 1 1;
			}
		}
		part { name: "left_padding";
			type: SPACER;
			scale: 1;
			description { state: "default" 0.0;
				min: ACTIONBAR_PADDING_SIZE_INC 0;
				max: ACTIONBAR_PADDING_SIZE_INC -1;
				fixed: 1 0;
				align: 0.0 0.5;
				rel1 { relative: 0.0 0.0; to: "title_bg"; }
				rel2 { relative: 0.0 1.0; to: "title_bg"; }
			}
		}
		part { name: "right_padding";
			type: SPACER;
			scale: 1;
			description { state: "default" 0.0;
				min: ACTIONBAR_PADDING_SIZE_INC 0;
				max: ACTIONBAR_PADDING_SIZE_INC -1;
				fixed: 1 0;
				align: 1.0 0.5;
				rel1 { relative: 1.0 0.0; to: "title_bg"; }
				rel2 { relative: 1.0 1.0; to: "title_bg"; }
			}
		}
		part { name: "click_event_area";
			type: RECT;
			ignore_flags: ON_HOLD;
			description { state: "default" 0.0;
				rel1 { to: "title_bg"; }
				rel2 { to: "title_bg"; }
				color: 0 0 0 0;
			}
		}
		part { name: "access.title";
			type: RECT;
			repeat_events: 1;
			description { state: "default" 0.0;
				rel1.to: "title_bg";
				rel2.to: "title_bg";
				color: 0 0 0 0;
			}
		}
		part { name: "top_padding";
			type: SPACER;
			scale: 1;
			description { state: "default" 0.0;
				fixed: 0 1;
				align: 0.5 0.0;
				min: 0 ACTIONBAR_TEXT_TOP_PADDING_SIZE_INC;
				max: -1 ACTIONBAR_TEXT_TOP_PADDING_SIZE_INC;
				rel1 {relative: 0.0 0.0; to: "title_bg"; }
				rel2 {relative: 1.0 0.0; to: "title_bg"; }
			}
		}
		part { name: "bottom_padding";
			type: SPACER;
			scale: 1;
			description { state: "default" 0.0;
				fixed: 0 1;
				align: 0.5 1.0;
				min: 0 ACTIONBAR_TEXT_BOTTOM_PADDING_SIZE_INC;
				max: -1 ACTIONBAR_TEXT_BOTTOM_PADDING_SIZE_INC;
				rel1 {relative: 0.0 1.0; to: "title_bg"; }
				rel2 {relative: 1.0 1.0; to: "title_bg"; }
			}
		}
		part { name: "elm.swallow.content";
			type: SWALLOW;
			scale: 1;
			repeat_events: 0;
			clip_to: "clipper";
			description { state: "default" 0.0;
				rel1 { relative: 0.0 1.0; to_x: "base"; to_y: "title_expand"; }
				rel2 { relative: 1.0 0.0; to_x: "base"; to_y: "button_padding"; }
			}
		}
		part { name: "elm.swallow.circle_bg";
			type: SWALLOW;
			mouse_events: 0;
			scale: 1;
			clip_to: "clipper";
			description { state: "default" 0.0; }
		}
		part { name: "elm.swallow.circle";
			type: SWALLOW;
			mouse_events: 0;
			scale: 1;
			clip_to: "clipper";
			description { state: "default" 0.0; }
		}
		part { name: "button_padding";
			type: SPACER;
			scale: 1;
			description { state: "default" 0.0;
				fixed: 0 1;
				align: 0.5 1.0;
				min: 0 100;
				max: -1 100;
				rel1 {relative: 0.0 1.0; to: "base"; }
				rel2 {relative: 1.0 1.0; to: "base"; }
			}
		}
	}
	programs {
		program { name: "visible";
			signal: "elm,state,visible";
			source: "elm";
			script {
				set_state(PART:"base", "default", 0.0);
				set_state(PART:"clipper", "default", 0.0);
				init();
				slide_start();
				run_program(PROGRAM:"title_text_fade_out");
			}
		}
		program { name: "invisible";
			signal: "elm,state,invisible";
			source: "elm";
			script {
				set_state(PART:"clipper", "hide", 0.0);
			}
		}
		program { name: "title_hide";
			signal: "elm,state,title,hide";
			source: "elm";
			script {
				set_state(PART:"title_bg", "hide", 0.0);
				set_state(PART:"title_clip", "hide", 0.0);
			}
		}
		program { name: "title_hide_trans";
			signal: "elm,action,title,hide";
			source: "elm";
			script {
				new st[32];
				new Float:vl;
				get_state(PART:"title_bg", st, 32, vl);
				if (!strcmp(st, "default")) {
					run_program(PROGRAM:"title_hide_trans2");
				}
			}
		}
		program { name: "title_hide_trans2";
			action: STATE_SET "hide_trans" 0.0;
			target: "title_bg";
			transition: SIN_FAC NAVIFRAME_TITLE_TRANS_TIME 1.7;
			after: "title_hide_trans3";
		}
		program { name: "title_hide_trans3";
			script {
				run_program(PROGRAM:"title_hide");
			}
			after: "title_trans_finished";
		}
		program { name: "title_trans_finished";
			action: SIGNAL_EMIT "elm,action,title,transition,finished" "";
		}
		program { name: "title_show";
			signal: "elm,state,title,show";
			source: "elm";
			script {
				set_state(PART:"title_bg", "default", 0.0);
				set_state(PART:"title_clip", "default", 0.0);
				run_program(PROGRAM:"title_text_fade_out");
			}
		}
		program { name: "title_show_trans";
			signal: "elm,action,title,show";
			source: "elm";
			script {
				new st[32];
				new Float:vl;
				get_state(PART:"title_bg", st, 32, vl);
				if (!strcmp(st, "hide")) {
					set_state(PART:"title_bg", "hide_trans", 0.0);
					set_state(PART:"title_clip", "default", 0.0);
					run_program(PROGRAM:"title_show_trans2");
				}
			}
		}
		program { name: "title_show_trans2";
			action: STATE_SET "default" 0.0;
			target: "title_bg";
			transition: SIN_FAC NAVIFRAME_TITLE_TRANS_TIME 1.7;
			after: "title_trans_finished";
		}
		program { name: "title_label_show";
			signal: "elm,state,title_label,show";
			source: "elm";
			script {
				run_program(PROGRAM:"title_text_fade_out");
			}
		}
		program { name: "title_label_hide";
			signal: "elm,state,title_label,hide";
			source: "elm";
		}
		program { name: "title_expand_show";
			signal: "elm,state,title_expand,show";
			source: "";
			script {
				set_state(PART:"title_expand", "show", 0.0);
			}
		}
		program { name: "title_expand_hide";
			signal: "elm,state,title_expand,hide";
			source: "";
			script {
				set_state(PART:"title_expand", "default", 0.0);
			}
		}
		program { name: "hidden_btn_show_trans";
			signal: "elm,action,title_expand,show";
			source: "";
			action: STATE_SET "show" 0.0;
			target: "title_expand";
			transition: SIN_FAC NAVIFRAME_TITLE_EXPAND_TRANS_TIME 1.7;
		}
		program { name: "title_expand_hide_trans";
			signal: "elm,action,title_expand,hide";
			source: "";
			action: STATE_SET "default" 0.0;
			target: "title_expand";
			transition: SIN_FAC NAVIFRAME_TITLE_EXPAND_TRANS_TIME 1.7;
		}
		program { name: "title_clicked";
			signal: "mouse,clicked,1";
			source: "click_event_area";
			action: SIGNAL_EMIT "elm,action,title,clicked" "";
		}
		program {
			name: "mirrored_on";
			signal: "edje,state,rtl";
			source: "edje";
			script {
				set_int(g_mirrored, 1);
				run_program(PROGRAM:"title_text_fade_out");
			}
		}
		program {
			name: "mirrored_off";
			signal: "edje,state,ltr";
			source: "edje";
			script {
				set_int(g_mirrored, 0);
				run_program(PROGRAM:"title_text_fade_out");
			}
		}
		program {
			name: "title_text_fade_out";
			script {
				if (get_int(g_text_fade_out_calc_timer)) {
					cancel_timer(g_text_fade_out_calc_timer);
					set_int(g_text_fade_out_calc_timer, 0);
				}
				set_int(g_text_fade_out_calc_timer, timer(NAVIFRAME_TEXT_FADE_OUT_CALC_TIME, "title_text_fade_out", 0));
			}
		}
	}
}

//////////////////////////////////////////////////////////////////////////////////
// Customizing panel for send button.
//////////////////////////////////////////////////////////////////////////////////

// ***************************** Panel*****************************************/
#define PANEL_LEFT_PADDING_SIZE_INC                        8
#define PANEL_RIGHT_PADDING_SIZE_INC                       6
#define PANEL_LEFT_IMAGE_SIZE_INC                          29 36
#define PANEL_RIGHT_IMAGE_SIZE_INC                         16 36
#define PANEL_RIGHT_CUE_SIZE_INC                           32 158
#define PANEL_RIGHT_CUE_IMAGE_SIZE_INC                     158 158
#define PANEL_RIGHT_EVENT_AREA_SIZE_INC                    50 140
#define PANEL_RIGHT_RELEASE_EVENT_AREA_SIZE_INC            100 140
#define PANEL_RIGHT_CUE_EFFECT_SIZE_INC                    200 200
#define PANEL_LAYOUT_SIZE_INC                              360 360

images {
	image, "./b_more_option.png" COMP;
	image, "./b_more_option_ef.png" COMP;
	image, "./b_more_option_bg.png" COMP;
	image, "./b_ic_press_full_circle_bg.png" COMP;
}

group { name: "elm/panel/right1/default";
   script {
      public mouse_down = 0;
      public mouse_click = 0;
      public multi_down = 0;
      public click_cnt = 0;
      public event_down = 0;
      public cue_hide = 0;
      public timer0(val) {
        if(val == 1)
           run_program(PROGRAM:"change_opacity");
        else if(val == 2)
           run_program(PROGRAM:"change_opacity2");
      }
   }
   parts {
      part { name: "bg";
         type: RECT;
         repeat_events: 1;
         description { state: "default" 0.0;
            min: PANEL_LAYOUT_SIZE_INC;
            max: PANEL_LAYOUT_SIZE_INC;
            //color_class: "transparent";
            color: 0 0 0 0;
         }
      }
      part { name: "cue.padding";
         type: SPACER;
         description { state: "default" 0.0;
            rel1.to: "bg";
            rel1.relative: 1.0 0.0;
            rel2.to: "bg";
            rel2.relative: 1.0 1.0;
            align: 1.0 0.5;
            min: PANEL_RIGHT_PADDING_SIZE_INC 0;
            max: PANEL_RIGHT_PADDING_SIZE_INC -1;
            fixed: 1 0;
         }
      }
      part { name: "cue";
         description { state: "default" 0.0;
            min: PANEL_RIGHT_IMAGE_SIZE_INC;
            max: PANEL_RIGHT_IMAGE_SIZE_INC;
            fixed: 1 0;
            image.normal: "./b_more_option.png";
            color: 128 128 128 128;
            rel1.to: "cue.padding";
            rel1.relative: 0.0 0.0;
            rel2.to: "cue.padding";
            rel2.relative: 0.0 1.0;
            align: 1.0 0.5;
         }
         description { state: "hidden" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            color: 128 128 128 128;
         }
      }
      part { name: "cue_ef";
         description { state: "default" 0.0;
            min: PANEL_RIGHT_IMAGE_SIZE_INC;
            max: PANEL_RIGHT_IMAGE_SIZE_INC;
            fixed: 1 1;
            image.normal: "./b_more_option_ef.png";
            color: 128 128 128 128;
            rel1.to: "cue";
            rel2.to: "cue";
         }
         description { state: "hidden" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
      part { name: "effect_bg";
         scale: 1;
         clip_to: "effect_bg_clip";
         repeat_events: 1;
         description { state: "default" 0.0;
            min: PANEL_RIGHT_CUE_EFFECT_SIZE_INC;
            max: PANEL_RIGHT_CUE_EFFECT_SIZE_INC;
            rel1.to: "bg";
            rel1.relative: 1.0 0.0;
            rel2.to: "bg";
            rel2.relative: 1.0 1.0;
            align: 0.5 0.5;
            fixed: 1 0;
            image.normal: "./b_ic_press_full_circle_bg.png";
            color: 128 128 128 128;
            map.on: 1;
         }
         description { state: "pressed" 0.0;
            inherit: "default" 0.0;
            color: 128 128 128 128;
            map {
               zoom.x: 0.8;
               zoom.y: 0.8;
            }
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
         }
         description { state: "start_persp" 0.0;
            inherit: "default" 0.0;
            color: 128 128 128 128;
            map {
               zoom.x: 1.0;
               zoom.y: 1.0;
            }
         }
      }
      part { name: "effect_bg_clip";
         scale: 1;
         type: RECT;
         repeat_events: 1;
         description { state: "default" 0.0;
            min: PANEL_RIGHT_CUE_EFFECT_SIZE_INC;
            max: PANEL_RIGHT_CUE_EFFECT_SIZE_INC;
            rel1.to: "bg";
            rel1.relative: 1.0 0.0;
            rel2.to: "bg";
            rel2.relative: 1.0 1.0;
            align: 0.5 0.5;
            fixed: 1 0;
            color: 255 255 255 0;
         }
         description { state: "pressed" 0.0;
            inherit: "default" 0.0;
            color: 255 255 255 255;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
         }
      }
      part { name: "effect_bg2";
         scale: 1;
         clip_to: "effect_bg_clip2";
         repeat_events: 1;
         description { state: "default" 0.0;
            min: PANEL_RIGHT_CUE_EFFECT_SIZE_INC;
            max: PANEL_RIGHT_CUE_EFFECT_SIZE_INC;
            rel1.to: "bg";
            rel1.relative: 1.0 0.0;
            rel2.to: "bg";
            rel2.relative: 1.0 1.0;
            align: 0.5 0.5;
            fixed: 1 0;
            image.normal: "./b_ic_press_full_circle_bg.png";
            //color_class: "transparent";
            color: 0 0 0 0;
            map.on: 1;
         }
         description { state: "pressed" 0.0;
            inherit: "default" 0.0;
            color: 128 128 128 128;
            map {
               zoom.x: 0.8;
               zoom.y: 0.8;
            }
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
         }
         description { state: "start_persp" 0.0;
            inherit: "default" 0.0;
            color: 128 128 128 128;
            map {
               zoom.x: 1.0;
               zoom.y: 1.0;
            }
         }
      }
      part { name: "effect_bg_clip2";
         scale: 1;
         type: RECT;
         repeat_events: 1;
         description { state: "default" 0.0;
            min: PANEL_RIGHT_CUE_EFFECT_SIZE_INC;
            max: PANEL_RIGHT_CUE_EFFECT_SIZE_INC;
            rel1.to: "bg";
            rel1.relative: 1.0 0.0;
            rel2.to: "bg";
            rel2.relative: 1.0 1.0;
            align: 0.5 0.5;
            fixed: 1 0;
            color: 255 255 255 0;
         }
         description { state: "pressed" 0.0;
            inherit: "default" 0.0;
            color: 255 255 255 255;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
         }
      }
      part { name: "cue.event";
         type: RECT;
         repeat_events: 0;
         description { state: "default" 0.0;
            min: PANEL_RIGHT_EVENT_AREA_SIZE_INC;
            max: PANEL_RIGHT_EVENT_AREA_SIZE_INC;
            fixed: 1 0;
            //color_class: "transparent";
            color: 0 0 0 0;
            rel1.to: "bg";
            rel1.relative: 1.0 0.0;
            rel2.to: "bg";
            rel2.relative: 1.0 1.0;
            align: 1.0 0.5;
         }
         description { state: "hidden" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
      part { name: "cue.release.event";
         type: RECT;
         repeat_events: 1;
         description { state: "default" 0.0;
            min: PANEL_RIGHT_RELEASE_EVENT_AREA_SIZE_INC;
            max: PANEL_RIGHT_RELEASE_EVENT_AREA_SIZE_INC;
            fixed: 1 0;
            //color_class: "transparent";
            color: 0 0 0 0;
            rel1.to: "bg";
            rel1.relative: 1.0 0.0;
            rel2.to: "bg";
            rel2.relative: 1.0 1.0;
            align: 1.0 0.5;
         }
         description { state: "hidden" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
      part { name: "base";
         repeat_events: 0;
         description { state: "default" 0.0;
            rel1.to: "bg";
            rel1.offset: -1 -1;
            rel2.to: "bg";
            rel2.offset: 0 0;
            visible: 0;
            fixed: 1 1;
            image.normal: "./b_more_option_bg.png";
            color: 128 128 128 128;
            map {
               on: 1;
               zoom {
                  x: 1.35;
                  y: 1.35;
               }
               color[0]: 0 0 0 0;
               color[1]: 0 0 0 0;
               color[2]: 0 0 0 0;
               color[3]: 0 0 0 0;
            }
         }
         description { state: "show" 0.0;
            inherit: "default" 0.0;
            visible: 1;
            map {
               zoom {
                  x: 1.0;
                  y: 1.0;
               }
               color[0]: 255 255 255 255;
               color[1]: 255 255 255 255;
               color[2]: 255 255 255 255;
               color[3]: 255 255 255 255;
            }
         }
      }
      part { name: "elm.swallow.content";
         type: SWALLOW;
         description { state: "default" 0.0;
            rel1.to: "bg";
            rel2.to: "bg";
            visible: 0;
            fixed: 1 1;
            map {
               on: 1;
               zoom {
                  x: 1.35;
                  y: 1.35;
               }
               color[0]: 0 0 0 0;
               color[1]: 0 0 0 0;
               color[2]: 0 0 0 0;
               color[3]: 0 0 0 0;
            }
         }
         description { state: "show" 0.0;
            inherit: "default" 0.0;
            visible: 1;
            map {
               zoom {
                  x: 1.0;
                  y: 1.0;
               }
               color[0]: 255 255 255 255;
               color[1]: 255 255 255 255;
               color[2]: 255 255 255 255;
               color[3]: 255 255 255 255;
            }
         }
      }
   }
   programs {
      program { name: "pressed";
         signal: "mouse,down,1*";
         source: "cue.event";
         script {
            if ((get_int(multi_down) == 0) && (get_int(mouse_down) == 0))
            {
               set_int(mouse_down, 1);
               set_int(event_down, 1);
               run_program(PROGRAM:"button_press1");
            }
         }
      }
      program { name: "button_press1";
         script {
            new st[31];
            new Float:vl;
            get_state(PART:"effect_bg", st, 30, vl);
            if (strcmp(st, "disabled")) {
               emit("elm,action,press", "");
               run_program(PROGRAM:"haptic");
               if(get_int(click_cnt) == 0) {
                  set_state(PART:"effect_bg", "pressed", 0.0);
                  set_state(PART:"effect_bg_clip", "pressed", 0.0);
                  run_program(PROGRAM:"start_persp");
                  timer(0.3, "timer0", 1);
               }
               else if(get_int(click_cnt) == 1) {
                  set_state(PART:"effect_bg2", "pressed", 0.0);
                  set_state(PART:"effect_bg_clip2", "pressed", 0.0);
                  run_program(PROGRAM:"start_persp2");
                  timer(0.3, "timer0", 2);
               }
            }
         }
      }
      program { name: "unpressed";
         signal: "mouse,up,1";
         source: "cue.event";
         script {
            if (get_int(mouse_down) == 1) {
               set_int(mouse_down, 0);
               run_program(PROGRAM:"button_unpress1");
            }
         }
      }
      program { name: "button_unpress1";
         script {
            new st[31];
            new Float:vl;
            get_state(PART:"effect_bg", st, 30, vl);
            if (strcmp(st, "disabled")) {
            if(get_int(click_cnt) == 0)
               set_int(click_cnt, 1);
            else
               set_int(click_cnt, 0);
            }
         }
      }
      program { name: "release.event_clicked";
         signal: "mouse,clicked,*";
         source: "cue.release.event";
         script {
            if (get_int(event_down) == 1) {
               set_int(event_down, 0);
               emit("cue,clicked", "elm");
               run_program(PROGRAM:"panel_toggle");
               run_program(PROGRAM:"play_sample");
            }
         }
      }
      program {
         name: "play_sample";
         action: RUN_PLUGIN "touch_sound";
      }
      program { name: "panel_toggle";
         action: SIGNAL_EMIT "elm,action,panel,toggle" "elm";
      }
      program {
         name: "haptic";
         action: RUN_PLUGIN "haptic_tap";
      }
      program { name: "disable";
         signal: "elm,state,disabled";
         source: "elm";
         script {
            if (get_int(cue_hide) == 0)
               set_state(PART:"cue", "disabled", 0.0);
            set_state(PART:"effect_bg", "disabled", 0.0);
            set_state(PART:"cue.event", "hidden", 0.0);
            set_state(PART:"cue.release.event", "hidden", 0.0);
         }
      }
      program { name: "enable";
         signal: "elm,state,enabled";
         source: "elm";
         script {
            if (get_int(cue_hide) == 1) {
               set_state(PART:"cue", "hidden", 0.0);
               set_state(PART:"cue.event", "hidden", 0.0);
               set_state(PART:"cue.release.event", "hidden", 0.0);
            }
            else {
               set_state(PART:"cue", "default", 0.0);
               set_state(PART:"cue.event", "default", 0.0);
               set_state(PART:"cue.release.event", "default", 0.0);
            }
            set_state(PART:"effect_bg", "default", 0.0);
         }
      }
      program { name: "multi_down";
         signal: "elm,action,multi,down";
         source: "elm";
         script {
            set_int(multi_down, 1);
         }
      }
      program { name: "multi_up";
         signal: "elm,action,multi,up";
         source: "elm";
         script {
            set_int(multi_down, 0);
         }
      }
      program { name: "start_persp";
         action: STATE_SET "start_persp" 0.0;
         transition: CUBIC_BEZIER 0.5 0.45 0.03 0.41 1.0;
         target: "effect_bg";
      }
      program { name: "change_opacity";
         action: STATE_SET "default" 0.0;
         transition: CUBIC_BEZIER 0.5 0.45 0.03 0.41 1.0;
         target: "effect_bg_clip";
      }
      program { name: "start_persp2";
         action: STATE_SET "start_persp" 0.0;
         transition: CUBIC_BEZIER 0.5 0.45 0.03 0.41 1.0;
         target: "effect_bg2";
      }
      program { name: "change_opacity2";
         action: STATE_SET "default" 0.0;
         transition: CUBIC_BEZIER 0.5 0.45 0.03 0.41 1.0;
         target: "effect_bg_clip2";
      }
      program {
         signal: "elm,action,show";
         source: "elm";
         action: STATE_SET "show" 0.0;
         transition: CUBIC_BEZIER 0.25 0.25 0.46 0.45 1.0;
         target: "elm.swallow.content";
         target: "base";
         after: "active,finished";
      }
      program {
         signal: "elm,action,hide";
         source: "elm";
         action: STATE_SET "default" 0.0;
         transition: CUBIC_BEZIER 0.25 0.25 0.46 0.45 1.0;
         target: "elm.swallow.content";
         target: "base";
         after: "inactive,finished";
      }
      program { name: "active,finished";
         action: SIGNAL_EMIT "elm,state,active,finished" "elm";
      }
      program { name: "inactive,finished";
         action: SIGNAL_EMIT "elm,state,inactive,finished" "elm";
      }
      program { name: "cue,hide";
         signal: "cue,hide";
         source: "elm";
         script {
            set_int(cue_hide, 1);
            set_state(PART:"cue", "hidden", 0.0);
            set_state(PART:"cue_ef", "hidden", 0.0);
            set_state(PART:"cue.event", "hidden", 0.0);
            set_state(PART:"cue.release.event", "hidden", 0.0);
         }
      }
      program { name: "cue,show";
         signal: "cue,show";
         source: "elm";
         script {
            set_int(cue_hide, 0);
            set_state(PART:"cue", "default", 0.0);
            set_state(PART:"cue_ef", "default", 0.0);
            set_state(PART:"cue.event", "default", 0.0);
            set_state(PART:"cue.release.event", "default", 0.0);
         }
      }
   }
}

group { name: "elm/panel/left1/default";
   inherit: "elm/panel/right1/default";
   parts {
      part { name: "cue.padding";
         type: SPACER;
         description { state: "default" 0.0;
            rel1.to: "bg";
            rel1.relative: 0.0 0.0;
            rel2.to: "bg";
            rel2.relative: 0.0 1.0;
            align: 0.0 0.5;
            min: PANEL_RIGHT_PADDING_SIZE_INC 0;
            max: PANEL_RIGHT_PADDING_SIZE_INC -1;
            fixed: 1 0;
         }
      }
      part { name: "cue";
         description { state: "default" 0.0;
            min: PANEL_RIGHT_IMAGE_SIZE_INC;
            max: PANEL_RIGHT_IMAGE_SIZE_INC;
            fixed: 1 0;
            image.normal: "./b_more_option.png";
            color: 128 128 128 128;
            rel1.to: "cue.padding";
            rel1.relative: 1.0 0.0;
            rel2.to: "cue.padding";
            rel2.relative: 1.0 1.0;
            align: 0.0 0.5;
         }
         description { state: "hidden" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            color: 128 128 128 128;
         }
      }
      part { name: "cue_ef";
         description { state: "default" 0.0;
            min: PANEL_RIGHT_IMAGE_SIZE_INC;
            max: PANEL_RIGHT_IMAGE_SIZE_INC;
            fixed: 1 1;
            image.normal: "./b_more_option_ef.png";
            color: 128 128 128 128;
            rel1.to: "cue";
            rel2.to: "cue";
         }
         description { state: "hidden" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
      part { name: "effect_bg";
         scale: 1;
         clip_to: "effect_bg_clip";
         repeat_events: 1;
         description { state: "default" 0.0;
            min: PANEL_RIGHT_CUE_EFFECT_SIZE_INC;
            max: PANEL_RIGHT_CUE_EFFECT_SIZE_INC;
            rel1.to: "bg";
            rel1.relative: 0.0 0.0;
            rel2.to: "bg";
            rel2.relative: 0.0 1.0;
            align: 0.5 0.5;
            fixed: 1 0;
            image.normal: "./b_ic_press_full_circle_bg.png";
            color: 128 128 128 128;
            map.on: 1;
         }
         description { state: "pressed" 0.0;
            inherit: "default" 0.0;
            color: 128 128 128 128;
            map {
               zoom.x: 0.8;
               zoom.y: 0.8;
            }
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
         }
         description { state: "start_persp" 0.0;
            inherit: "default" 0.0;
            color: 128 128 128 128;
            map {
               zoom.x: 1.0;
               zoom.y: 1.0;
            }
         }
      }
      part { name: "effect_bg_clip";
         scale: 1;
         type: RECT;
         repeat_events: 1;
         description { state: "default" 0.0;
            min: PANEL_RIGHT_CUE_EFFECT_SIZE_INC;
            max: PANEL_RIGHT_CUE_EFFECT_SIZE_INC;
            rel1.to: "bg";
            rel1.relative: 0.0 0.0;
            rel2.to: "bg";
            rel2.relative: 0.0 1.0;
            align: 0.5 0.5;
            fixed: 1 0;
            color: 255 255 255 0;
         }
         description { state: "pressed" 0.0;
            inherit: "default" 0.0;
            color: 255 255 255 255;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
         }
      }
      part { name: "effect_bg2";
         scale: 1;
         clip_to: "effect_bg_clip2";
         repeat_events: 1;
         description { state: "default" 0.0;
            min: PANEL_RIGHT_CUE_EFFECT_SIZE_INC;
            max: PANEL_RIGHT_CUE_EFFECT_SIZE_INC;
            rel1.to: "bg";
            rel1.relative: 0.0 0.0;
            rel2.to: "bg";
            rel2.relative: 0.0 1.0;
            align: 0.5 0.5;
            fixed: 1 0;
            image.normal: "./b_ic_press_full_circle_bg.png";
            //color_class: "transparent";
            color: 0 0 0 0;
            map.on: 1;
         }
         description { state: "pressed" 0.0;
            inherit: "default" 0.0;
            color: 128 128 128 128;
            map {
               zoom.x: 0.8;
               zoom.y: 0.8;
            }
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
         }
         description { state: "start_persp" 0.0;
            inherit: "default" 0.0;
            color: 128 128 128 128;
            map {
               zoom.x: 1.0;
               zoom.y: 1.0;
            }
         }
      }
      part { name: "effect_bg_clip2";
         scale: 1;
         type: RECT;
         repeat_events: 1;
         description { state: "default" 0.0;
            min: PANEL_RIGHT_CUE_EFFECT_SIZE_INC;
            max: PANEL_RIGHT_CUE_EFFECT_SIZE_INC;
            rel1.to: "bg";
            rel1.relative: 0.0 0.0;
            rel2.to: "bg";
            rel2.relative: 0.0 1.0;
            align: 0.5 0.5;
            fixed: 1 0;
            color: 255 255 255 0;
         }
         description { state: "pressed" 0.0;
            inherit: "default" 0.0;
            color: 255 255 255 255;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
         }
      }
      part { name: "cue.event";
         type: RECT;
         description { state: "default" 0.0;
            min: PANEL_RIGHT_EVENT_AREA_SIZE_INC;
            max: PANEL_RIGHT_EVENT_AREA_SIZE_INC;
            fixed: 1 0;
            //color_class: "transparent";
            color: 0 0 0 0;
            rel1.to: "bg";
            rel1.relative: 0.0 0.0;
            rel2.to: "bg";
            rel2.relative: 0.0 1.0;
            align: 0.0 0.5;
         }
         description { state: "hidden" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
      part { name: "cue.release.event";
         type: RECT;
         repeat_events: 1;
         description { state: "default" 0.0;
            min: PANEL_RIGHT_RELEASE_EVENT_AREA_SIZE_INC;
            max: PANEL_RIGHT_RELEASE_EVENT_AREA_SIZE_INC;
            fixed: 1 0;
            //color_class: "transparent";
            color: 0 0 0 0;
            rel1.to: "bg";
            rel1.relative: 0.0 0.0;
            rel2.to: "bg";
            rel2.relative: 0.0 1.0;
            align: 0.0 0.5;
         }
         description { state: "hidden" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
   }
}

group { name: "elm/panel/left_sending/default";
	inherit: "elm/panel/left1/default";
	parts {
		part { name: "cue.padding";
		   type: SPACER;
		   description { state: "default" 0.0;
			  rel1.to: "bg";
			  rel1.relative: 0.0 0.0;
			  rel2.to: "bg";
			  rel2.relative: 0.0 1.0;
			  align: 0.0 0.5;
			  min: 1 0;//PANEL_RIGHT_PADDING_SIZE_INC 0;
			  max: 1 -1;//PANEL_RIGHT_PADDING_SIZE_INC -1;
			  fixed: 1 0;
		   }
		}
		part { name: "cue";
		   description { state: "default" 0.0;
			  min: 39 200;//PANEL_RIGHT_IMAGE_SIZE_INC;
			  max: 39 200;//PANEL_RIGHT_IMAGE_SIZE_INC;
			  fixed: 1 0;
			  image.normal: "./b_stt_send_icon.png";
			  color: 128 128 128 128;
			  rel1.to: "cue.padding";
			  rel1.relative: 1.0 0.0;
			  rel2.to: "cue.padding";
			  rel2.relative: 1.0 1.0;
			  align: 0.0 0.5;
		   }
		   description { state: "hidden" 0.0;
			  inherit: "default" 0.0;
			  visible: 0;
		   }
		   description { state: "disabled" 0.0;
			  inherit: "default" 0.0;
			  color_class: "AO015L2D";//"B052L1D";
		   }
		}
		part { name: "cue_ef";
		   description { state: "default" 0.0;
			  min: PANEL_RIGHT_IMAGE_SIZE_INC;
			  max: PANEL_RIGHT_IMAGE_SIZE_INC;
			  fixed: 1 1;
			  visible: 0;
			  image.normal: "./b_more_option_ef.png";
			  color: 128 128 128 128;
			  rel1.to: "cue";
			  rel2.to: "cue";
		   }
		   description { state: "hidden" 0.0;
			  inherit: "default" 0.0;
			  visible: 0;
		   }
		}
	}
}

group { name: "elm/panel/left_confirm/default";
	inherit: "elm/panel/left_sending/default";
	parts {
		part { name: "cue";
		   description { state: "default" 0.0;
			  min: 39 200;//PANEL_RIGHT_IMAGE_SIZE_INC;
			  max: 39 200;//PANEL_RIGHT_IMAGE_SIZE_INC;
			  fixed: 1 0;
			  image.normal: "./b_stt_confirm_icon.png";
			  color: 128 128 128 128;
			  rel1.to: "cue.padding";
			  rel1.relative: 1.0 0.0;
			  rel2.to: "cue.padding";
			  rel2.relative: 1.0 1.0;
			  align: 0.0 0.5;
		   }
		   description { state: "hidden" 0.0;
			  inherit: "default" 0.0;
			  visible: 0;
		   }
		   description { state: "disabled" 0.0;
			  inherit: "default" 0.0;
			  color_class: "AO015L2D";//"B052L1D";
		   }
		}
	}
}

}
